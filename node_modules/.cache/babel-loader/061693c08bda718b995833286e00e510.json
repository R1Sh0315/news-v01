{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index6.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, d as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { p as printIonWarning, a as printIonError } from './index7.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { g as generateDayAriaLabel, i as isBefore, a as isAfter, b as isSameDay, c as getPreviousMonth, d as getNextMonth, p as parseDate, e as getToday, f as getPartsFromCalendarDay, h as getEndOfWeek, j as getStartOfWeek, k as getPreviousDay, l as getNextDay, m as getPreviousWeek, n as getNextWeek, w as warnIfValueOutOfBounds, o as convertToArrayOfNumbers, q as convertDataToISO, r as getCombinedDateColumnData, s as getMonthColumnData, t as getDayColumnData, u as getYearColumnData, v as isMonthFirstLocale, x as getTimeColumnsData, y as isLocaleDayPeriodRTL, z as getMonthAndYear, A as getDaysOfWeek, B as getDaysOfMonth, C as generateMonths, D as is24Hour, E as getLocalizedTime, F as getMonthAndDay, G as formatValue, H as getNextYear, I as getPreviousYear, J as clampDate, K as parseAmPm, L as calculateHourFromAMPM } from './parse.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\n\n\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n\n\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n\n\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n\n\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n\n\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\n\n\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n\n  const isActive = activePartsArray.find(parts => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts)\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\n\n\nconst isMonthDisabled = (refParts, _ref) => {\n  let {\n    minParts,\n    maxParts\n  } = _ref;\n\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  } // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n\n\n  if (minParts && isBefore(refParts, minParts) || maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\n\n\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\n\n\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(nextMonth, {\n    maxParts\n  });\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color);font-size:14px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:3px;padding-bottom:0px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\nconst Datetime = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    var _this;\n\n    super();\n    _this = this;\n\n    this.__registerHost();\n\n    this.__attachShadow();\n\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionRender = createEvent(this, \"ionRender\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    /**\n     * Whether to highlight the active day with a solid circle (as opposed\n     * to the outline circle around today). If you don't specify an initial\n     * value for the datetime, it doesn't automatically init to a default to\n     * avoid unwanted change events firing. If the solid circle were still\n     * shown then, it would look like a date had already been selected, which\n     * is misleading UX.\n     */\n\n    this.highlightActiveParts = false;\n    this.todayParts = parseDate(getToday());\n    this.prevPresentation = null;\n    this.showMonthAndYear = false;\n    this.activeParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    this.isPresented = false;\n    this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n\n    this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, multiple dates can be selected at once. Only\n     * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n     */\n\n    this.multiple = false;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. On `ios` mode this will include the\n     * slotted title, and on `md` mode this will include\n     * the slotted title and the selected date.\n     */\n\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n\n    this.size = 'fixed';\n    /**\n     * If `true`, a wheel picker will be rendered instead of a calendar grid\n     * where possible. If `false`, a calendar grid will be rendered instead of\n     * a wheel picker where possible.\n     *\n     * A wheel picker can be rendered instead of a grid when `presentation` is\n     * one of the following values: `'date'`, `'date-time'`, or `'time-date'`.\n     *\n     * A wheel picker will always be rendered regardless of\n     * the `preferWheel` value when `presentation` is one of the following values:\n     * `'time'`, `'month'`, `'month-year'`, or `'year'`.\n     */\n\n    this.preferWheel = false;\n\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n\n    this.setWorkingParts = parts => {\n      this.workingParts = Object.assign({}, parts);\n    };\n\n    this.setActiveParts = function (parts) {\n      let removeDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      const {\n        multiple,\n        activePartsClone,\n        highlightActiveParts\n      } = _this;\n\n      if (multiple) {\n        /**\n         * We read from activePartsClone here because valueChanged() only updates that,\n         * so it's the more reliable source of truth. If we read from activeParts, then\n         * if you click July 1, manually set the value to July 2, and then click July 3,\n         * the new value would be [July 1, July 3], ignoring the value set.\n         *\n         * We can then pass the new value to activeParts (rather than activePartsClone)\n         * since the clone will be updated automatically by activePartsChanged().\n         */\n        const activePartsArray = Array.isArray(activePartsClone) ? activePartsClone : [activePartsClone];\n\n        if (removeDate) {\n          _this.activeParts = activePartsArray.filter(p => !isSameDay(p, parts));\n        } else if (highlightActiveParts) {\n          _this.activeParts = [...activePartsArray, parts];\n        } else {\n          /**\n           * If highlightActiveParts is false, that means we just have a\n           * default value of today in activeParts; we need to replace that\n           * rather than adding to it since it's just a placeholder.\n           */\n          _this.activeParts = [parts];\n        }\n      } else {\n        _this.activeParts = Object.assign({}, parts);\n      }\n      /**\n       * Now that the user has interacted somehow to select something, we can\n       * show the solid highlight. This needs to be done after checking it above,\n       * but before the confirm call below.\n       *\n       * Note that for datetimes with confirm/cancel buttons, the value\n       * isn't updated until you call confirm(). We need to bring the\n       * solid circle back on day click for UX reasons, rather than only\n       * show the circle if `value` is truthy.\n       */\n\n\n      _this.highlightActiveParts = true;\n      const hasSlottedButtons = _this.el.querySelector('[slot=\"buttons\"]') !== null;\n\n      if (hasSlottedButtons || _this.showDefaultButtons) {\n        return;\n      }\n\n      _this.confirm();\n    };\n    /**\n     * Stencil sometimes sets calendarBodyRef to null on rerender, even though\n     * the element is present. Query for it manually as a fallback.\n     *\n     * TODO(FW-901) Remove when issue is resolved: https://github.com/ionic-team/stencil/issues/3253\n     */\n\n\n    this.getCalendarBodyEl = () => {\n      var _a;\n\n      return this.calendarBodyRef || ((_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.calendar-body'));\n    };\n\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n\n      if (!calendarBodyRef) {\n        return;\n      }\n\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n\n      const checkCalendarBodyFocus = ev => {\n        var _a;\n\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n\n        this.focusWorkingDay(currentMonth);\n      };\n\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, {\n        attributeFilter: ['class'],\n        attributeOldValue: true\n      });\n\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n\n\n      calendarBodyRef.addEventListener('keydown', ev => {\n        const activeElement = root.activeElement;\n\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n\n\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n\n    this.focusWorkingDay = currentMonth => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const {\n        day\n      } = this.workingParts;\n\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n\n\n      const dayEl = currentMonth.querySelector(`.calendar-day:nth-of-type(${padding.length + day})`);\n\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n\n    this.processMinParts = () => {\n      if (this.min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n\n      const {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      } = parseDate(this.min);\n      this.minParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      };\n    };\n\n    this.processMaxParts = () => {\n      if (this.max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n\n      const {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      } = parseDate(this.max);\n      this.maxParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      };\n    };\n\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n\n\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n\n        const getChangedMonth = parts => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          const root = this.el.shadowRoot;\n          /**\n           * Get the element that is in the center of the calendar body.\n           * This will be an element inside of the active month.\n           */\n\n          const elementAtCenter = root.elementFromPoint(box.x + box.width / 2, box.y + box.height / 2);\n          /**\n           * If there is no element then the\n           * component may be re-rendering on a slow device.\n           */\n\n          if (!elementAtCenter) return;\n          const month = elementAtCenter.closest('.calendar-month');\n          if (!month) return;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2) return;\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          } else if (month === endMonth) {\n            return getNextMonth(parts);\n          } else {\n            return;\n          }\n        };\n\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n\n\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate) return;\n          const {\n            month,\n            day,\n            year\n          } = newDate;\n\n          if (isMonthDisabled({\n            month,\n            year,\n            day: null\n          }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), {\n              day: null\n            }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), {\n              day: null\n            })\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n\n\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), {\n              month,\n              day: day,\n              year\n            }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n\n\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n\n        let appliediOSRubberBandFix = false;\n\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n\n\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          } // Wait ~3 frames\n\n\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n\n\n    this.destroyInteractionListeners = () => {\n      const {\n        destroyCalendarListener,\n        destroyKeyboardMO\n      } = this;\n\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n\n    this.processValue = value => {\n      this.highlightActiveParts = !!value;\n      let valueToProcess = parseDate(value || getToday());\n      const {\n        minParts,\n        maxParts,\n        multiple\n      } = this;\n\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        valueToProcess = valueToProcess[0];\n      }\n\n      warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      const {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset\n      } = clampDate(singleValue, minParts, maxParts);\n      const ampm = parseAmPm(hour);\n      this.setWorkingParts({\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm\n      });\n\n      if (Array.isArray(valueToProcess)) {\n        this.activeParts = [...valueToProcess];\n      } else {\n        this.activeParts = {\n          month,\n          day,\n          year,\n          hour,\n          minute,\n          tzOffset,\n          ampm\n        };\n      }\n    };\n\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n\n    this.hasValue = () => {\n      return this.value != null && this.value !== '';\n    };\n\n    this.nextMonth = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n\n      if (!calendarBodyRef) {\n        return;\n      }\n\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n\n      if (!nextMonth) {\n        return;\n      }\n\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth'\n      });\n    };\n\n    this.prevMonth = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n\n      if (!calendarBodyRef) {\n        return;\n      }\n\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n\n      if (!prevMonth) {\n        return;\n      }\n\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    };\n\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n\n  disabledChanged() {\n    this.emitStyle();\n  }\n\n  minChanged() {\n    this.processMinParts();\n  }\n\n  maxChanged() {\n    this.processMaxParts();\n  }\n\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n\n  activePartsChanged() {\n    this.activePartsClone = this.activeParts;\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n\n\n  valueChanged() {\n    const {\n      value,\n      minParts,\n      maxParts,\n      workingParts,\n      multiple\n    } = this;\n\n    if (this.hasValue()) {\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        return; // setting this.value will trigger re-run of this function\n      }\n      /**\n       * Clones the value of the `activeParts` to the private clone, to update\n       * the date display on the current render cycle without causing another render.\n       *\n       * This allows us to update the current value's date/time display without\n       * refocusing or shifting the user's display (leaves the user in place).\n       */\n\n\n      const valueDateParts = parseDate(value);\n\n      if (valueDateParts) {\n        warnIfValueOutOfBounds(valueDateParts, minParts, maxParts);\n\n        if (Array.isArray(valueDateParts)) {\n          this.activePartsClone = [...valueDateParts];\n        } else {\n          const {\n            month,\n            day,\n            year,\n            hour,\n            minute\n          } = valueDateParts;\n          const ampm = hour != null ? hour >= 12 ? 'pm' : 'am' : undefined;\n          this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), {\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm\n          });\n          /**\n           * The working parts am/pm value must be updated when the value changes, to\n           * ensure the time picker hour column values are generated correctly.\n           *\n           * Note that we don't need to do this if valueDateParts is an array, since\n           * multiple=\"true\" does not apply to time pickers.\n           */\n\n          this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            ampm\n          }));\n        }\n      } else {\n        printIonWarning(`Unable to parse date string: ${value}. Please provide a valid ISO 8601 datetime string.`);\n      }\n    }\n\n    this.emitStyle();\n    this.ionChange.emit({\n      value\n    });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n\n\n  async confirm() {\n    let closeOverlay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const {\n      highlightActiveParts,\n      isCalendarPicker,\n      activeParts\n    } = this;\n    /**\n     * We only update the value if the presentation is not a calendar picker,\n     * or if `highlightActiveParts` is true; indicating that the user\n     * has selected a date from the calendar picker.\n     *\n     * Otherwise \"today\" would accidentally be set as the value.\n     */\n\n    if (highlightActiveParts || !isCalendarPicker) {\n      const activePartsIsArray = Array.isArray(activeParts);\n\n      if (activePartsIsArray && activeParts.length === 0) {\n        this.value = undefined;\n      } else {\n        /**\n         * Prevent convertDataToISO from doing any\n         * kind of transformation based on timezone\n         * This cancels out any change it attempts to make\n         *\n         * Important: Take the timezone offset based on\n         * the date that is currently selected, otherwise\n         * there can be 1 hr difference when dealing w/ DST\n         */\n        if (activePartsIsArray) {\n          const dates = convertDataToISO(activeParts).map(str => new Date(str));\n\n          for (let i = 0; i < dates.length; i++) {\n            activeParts[i].tzOffset = dates[i].getTimezoneOffset() * -1;\n          }\n        } else {\n          const date = new Date(convertDataToISO(activeParts));\n          activeParts.tzOffset = date.getTimezoneOffset() * -1;\n        }\n\n        this.value = convertDataToISO(activeParts);\n      }\n    }\n\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n\n\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n\n\n  async cancel() {\n    let closeOverlay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.ionCancel.emit();\n\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n\n  get isCalendarPicker() {\n    const {\n      presentation\n    } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = entries => {\n      const ev = entries[0];\n\n      if (!ev.isIntersecting) {\n        return;\n      }\n\n      this.initializeListeners();\n      /**\n       * TODO: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n\n    const visibleIO = new IntersectionObserver(visibleCallback, {\n      threshold: 0.01\n    });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n\n    const hiddenCallback = entries => {\n      const ev = entries[0];\n\n      if (ev.isIntersecting) {\n        return;\n      }\n\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n\n    const hiddenIO = new IntersectionObserver(hiddenCallback, {\n      threshold: 0\n    });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', ev => ev.stopPropagation());\n    root.addEventListener('ionBlur', ev => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n\n\n  componentDidRender() {\n    const {\n      presentation,\n      prevPresentation\n    } = this;\n\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n\n    if (presentation === prevPresentation) {\n      return;\n    }\n\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n\n  componentWillLoad() {\n    const {\n      el,\n      multiple,\n      presentation,\n      preferWheel\n    } = this;\n\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n\n      if (preferWheel) {\n        printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n\n    this.processMinParts();\n    this.processMaxParts();\n    this.processValue(this.value);\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    this.emitStyle();\n  }\n\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n\n\n  renderFooter() {\n    const {\n      showDefaultButtons,\n      showClearButton\n    } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n\n    const clearButtonClick = () => {\n      this.reset();\n      this.value = undefined;\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n\n\n    return h(\"div\", {\n      class: \"datetime-footer\"\n    }, h(\"div\", {\n      class: \"datetime-buttons\"\n    }, h(\"div\", {\n      class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton\n      }\n    }, h(\"slot\", {\n      name: \"buttons\"\n    }, h(\"ion-buttons\", null, showDefaultButtons && h(\"ion-button\", {\n      id: \"cancel-button\",\n      color: this.color,\n      onClick: () => this.cancel(true)\n    }, this.cancelText), h(\"div\", null, showClearButton && h(\"ion-button\", {\n      id: \"clear-button\",\n      color: this.color,\n      onClick: () => clearButtonClick()\n    }, this.clearText), showDefaultButtons && h(\"ion-button\", {\n      id: \"confirm-button\",\n      color: this.color,\n      onClick: () => this.confirm(true)\n    }, this.doneText)))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n\n\n  renderWheelPicker() {\n    let forcePresentation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.presentation;\n\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date' ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)] : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker-internal\", null, renderArray);\n  }\n\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date' ? this.renderCombinedDatePickerColumn() : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n\n  renderCombinedDatePickerColumn() {\n    const {\n      activeParts,\n      workingParts,\n      locale,\n      minParts,\n      maxParts,\n      todayParts,\n      isDateEnabled\n    } = this;\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n\n    const monthsToRender = generateMonths(workingParts);\n    /**\n     * generateMonths returns the day data as well,\n     * but we do not want the day value to act as a max/min\n     * on the data we are going to generate.\n     */\n\n    for (let i = 0; i <= monthsToRender.length - 1; i++) {\n      monthsToRender[i].day = null;\n    }\n    /**\n     * If developers have provided their own\n     * min/max values, use that instead. Otherwise,\n     * fallback to the default range of 3 months.\n     */\n\n\n    const min = minParts || monthsToRender[0];\n    const max = maxParts || monthsToRender[monthsToRender.length - 1];\n    const result = getCombinedDateColumnData(locale, workingParts, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n\n        return Object.assign(Object.assign({}, itemObject), {\n          disabled\n        });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, default it to today.\n     */\n\n\n    const todayString = workingParts.day ? `${workingParts.year}-${workingParts.month}-${workingParts.day}` : `${todayParts.year}-${todayParts.month}-${todayParts.day}`;\n    return h(\"ion-picker-column-internal\", {\n      class: \"date-column\",\n      color: this.color,\n      items: items,\n      value: todayString,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n\n        const {\n          value\n        } = ev.detail;\n        const findPart = parts.find(_ref2 => {\n          let {\n            month,\n            day,\n            year\n          } = _ref2;\n          return value === `${year}-${month}-${day}`;\n        });\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), findPart));\n        } // We can re-attach the scroll listener after\n        // the working parts have been updated.\n\n\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const {\n      workingParts,\n      isDateEnabled\n    } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues) : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues) : [];\n\n    if (isDateEnabled) {\n      days = days.map(dayObject => {\n        const {\n          value\n        } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year\n        };\n        let disabled;\n\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n\n        return Object.assign(Object.assign({}, dayObject), {\n          disabled\n        });\n      });\n    }\n\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears ? getYearColumnData(this.todayParts, this.minParts, this.maxParts, this.parsedYearValues) : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n\n    const showMonthFirst = isMonthFirstLocale(this.locale, {\n      month: 'numeric',\n      day: 'numeric'\n    });\n    let renderArray = [];\n\n    if (showMonthFirst) {\n      renderArray = [this.renderMonthPickerColumn(months), this.renderDayPickerColumn(days), this.renderYearPickerColumn(years)];\n    } else {\n      renderArray = [this.renderDayPickerColumn(days), this.renderMonthPickerColumn(months), this.renderYearPickerColumn(years)];\n    }\n\n    return renderArray;\n  }\n\n  renderDayPickerColumn(days) {\n    var _a;\n\n    if (days.length === 0) {\n      return [];\n    }\n\n    const {\n      activeParts,\n      workingParts\n    } = this;\n    return h(\"ion-picker-column-internal\", {\n      class: \"day-column\",\n      color: this.color,\n      items: days,\n      value: (_a = workingParts.day || this.todayParts.day) !== null && _a !== void 0 ? _a : undefined,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          day: ev.detail.value\n        }));\n\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), {\n            day: ev.detail.value\n          }));\n        } // We can re-attach the scroll listener after\n        // the working parts have been updated.\n\n\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n\n    const {\n      activeParts,\n      workingParts\n    } = this;\n    return h(\"ion-picker-column-internal\", {\n      class: \"month-column\",\n      color: this.color,\n      items: months,\n      value: workingParts.month,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          month: ev.detail.value\n        }));\n\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), {\n            month: ev.detail.value\n          }));\n        } // We can re-attach the scroll listener after\n        // the working parts have been updated.\n\n\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n\n    const {\n      activeParts,\n      workingParts\n    } = this;\n    return h(\"ion-picker-column-internal\", {\n      class: \"year-column\",\n      color: this.color,\n      items: years,\n      value: workingParts.year,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          year: ev.detail.value\n        }));\n\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), {\n            year: ev.detail.value\n          }));\n        } // We can re-attach the scroll listener after\n        // the working parts have been updated.\n\n\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n\n    const {\n      hoursData,\n      minutesData,\n      dayPeriodData\n    } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, this.value ? this.minParts : undefined, this.value ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [this.renderHourPickerColumn(hoursData), this.renderMinutePickerColumn(minutesData), this.renderDayPeriodPickerColumn(dayPeriodData)];\n  }\n\n  renderHourPickerColumn(hoursData) {\n    const {\n      workingParts,\n      activePartsClone\n    } = this;\n    if (hoursData.length === 0) return [];\n    return h(\"ion-picker-column-internal\", {\n      color: this.color,\n      value: activePartsClone.hour,\n      items: hoursData,\n      numericInput: true,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          hour: ev.detail.value\n        }));\n\n        if (!Array.isArray(activePartsClone)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), {\n            hour: ev.detail.value\n          }));\n        }\n\n        ev.stopPropagation();\n      }\n    });\n  }\n\n  renderMinutePickerColumn(minutesData) {\n    const {\n      workingParts,\n      activePartsClone\n    } = this;\n    if (minutesData.length === 0) return [];\n    return h(\"ion-picker-column-internal\", {\n      color: this.color,\n      value: activePartsClone.minute,\n      items: minutesData,\n      numericInput: true,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          minute: ev.detail.value\n        }));\n\n        if (!Array.isArray(activePartsClone)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), {\n            minute: ev.detail.value\n          }));\n        }\n\n        ev.stopPropagation();\n      }\n    });\n  }\n\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const {\n      workingParts,\n      activePartsClone\n    } = this;\n\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return h(\"ion-picker-column-internal\", {\n      style: isDayPeriodRTL ? {\n        order: '-1'\n      } : {},\n      color: this.color,\n      value: activePartsClone.ampm,\n      items: dayPeriodData,\n      onIonChange: ev => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          ampm: ev.detail.value,\n          hour\n        }));\n\n        if (!Array.isArray(activePartsClone)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), {\n            ampm: ev.detail.value,\n            hour\n          }));\n        }\n\n        ev.stopPropagation();\n      }\n    });\n  }\n\n  renderWheelView(forcePresentation) {\n    const {\n      locale\n    } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return h(\"div\", {\n      class: {\n        [`wheel-order-${columnOrder}`]: true\n      }\n    }, this.renderWheelPicker(forcePresentation));\n  }\n  /**\n   * Grid Render Methods\n   */\n\n\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n    return h(\"div\", {\n      class: \"calendar-header\"\n    }, h(\"div\", {\n      class: \"calendar-action-buttons\"\n    }, h(\"div\", {\n      class: \"calendar-month-year\"\n    }, h(\"ion-item\", {\n      button: true,\n      detail: false,\n      lines: \"none\",\n      onClick: () => this.toggleMonthAndYearView()\n    }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), ' ', h(\"ion-icon\", {\n      icon: this.showMonthAndYear ? expandedIcon : collapsedIcon,\n      lazy: false\n    })))), h(\"div\", {\n      class: \"calendar-next-prev\"\n    }, h(\"ion-buttons\", null, h(\"ion-button\", {\n      disabled: prevMonthDisabled,\n      onClick: () => this.prevMonth()\n    }, h(\"ion-icon\", {\n      slot: \"icon-only\",\n      icon: chevronBack,\n      lazy: false,\n      flipRtl: true\n    })), h(\"ion-button\", {\n      disabled: nextMonthDisabled,\n      onClick: () => this.nextMonth()\n    }, h(\"ion-icon\", {\n      slot: \"icon-only\",\n      icon: chevronForward,\n      lazy: false,\n      flipRtl: true\n    }))))), h(\"div\", {\n      class: \"calendar-days-of-week\"\n    }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map(d => {\n      return h(\"div\", {\n        class: \"day-of-week\"\n      }, d);\n    })));\n  }\n\n  renderMonth(month, year) {\n    const {\n      highlightActiveParts\n    } = this;\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const swipeDisabled = isMonthDisabled({\n      month,\n      year,\n      day: null\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), {\n        day: null\n      }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), {\n        day: null\n      })\n    }); // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    return h(\"div\", {\n      class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled\n      }\n    }, h(\"div\", {\n      class: \"calendar-month-grid\"\n    }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const {\n        day,\n        dayOfWeek\n      } = dateObject;\n      const {\n        isDateEnabled,\n        multiple\n      } = this;\n      const referenceParts = {\n        month,\n        day,\n        year\n      };\n      const {\n        isActive,\n        isToday,\n        ariaLabel,\n        ariaSelected,\n        disabled\n      } = getCalendarDayState(this.locale, referenceParts, this.activePartsClone, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      let isCalDayDisabled = isCalMonthDisabled || disabled;\n\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n      }\n\n      return h(\"button\", {\n        tabindex: \"-1\",\n        \"data-day\": day,\n        \"data-month\": month,\n        \"data-year\": year,\n        \"data-index\": index,\n        \"data-day-of-week\": dayOfWeek,\n        disabled: isCalDayDisabled,\n        class: {\n          'calendar-day-padding': day === null,\n          'calendar-day': true,\n          'calendar-day-active': isActive && highlightActiveParts,\n          'calendar-day-today': isToday\n        },\n        \"aria-selected\": ariaSelected,\n        \"aria-label\": ariaLabel,\n        onClick: () => {\n          if (day === null) {\n            return;\n          }\n\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), {\n            month,\n            day,\n            year\n          })); // multiple only needs date info, so we can wipe out other fields like time\n\n          if (multiple) {\n            this.setActiveParts({\n              month,\n              day,\n              year\n            }, isActive && highlightActiveParts);\n          } else {\n            this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), {\n              month,\n              day,\n              year\n            }));\n          }\n        }\n      }, day);\n    })));\n  }\n\n  renderCalendarBody() {\n    return h(\"div\", {\n      class: \"calendar-body ion-focusable\",\n      ref: el => this.calendarBodyRef = el,\n      tabindex: \"0\"\n    }, generateMonths(this.workingParts).map(_ref3 => {\n      let {\n        month,\n        year\n      } = _ref3;\n      return this.renderMonth(month, year);\n    }));\n  }\n\n  renderCalendar(mode) {\n    return h(\"div\", {\n      class: \"datetime-calendar\"\n    }, this.renderCalendarHeader(mode), this.renderCalendarBody());\n  }\n\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n\n    return h(\"slot\", {\n      name: \"time-label\"\n    }, \"Time\");\n  }\n\n  renderTimeOverlay() {\n    const use24Hour = is24Hour(this.locale, this.hourCycle);\n    return [h(\"div\", {\n      class: \"time-header\"\n    }, this.renderTimeLabel()), h(\"button\", {\n      class: {\n        'time-body': true,\n        'time-body-active': this.isTimePopoverOpen\n      },\n      \"aria-expanded\": \"false\",\n      \"aria-haspopup\": \"true\",\n      onClick: async ev => {\n        const {\n          popoverRef\n        } = this;\n\n        if (popoverRef) {\n          this.isTimePopoverOpen = true;\n          popoverRef.present(new CustomEvent('ionShadowTarget', {\n            detail: {\n              ionShadowTarget: ev.target\n            }\n          }));\n          await popoverRef.onWillDismiss();\n          this.isTimePopoverOpen = false;\n        }\n      }\n    }, getLocalizedTime(this.locale, this.activePartsClone, use24Hour)), h(\"ion-popover\", {\n      alignment: \"center\",\n      translucent: true,\n      overlayIndex: 1,\n      arrow: false,\n      onWillPresent: ev => {\n        /**\n         * Intersection Observers do not consistently fire between Blink and Webkit\n         * when toggling the visibility of the popover and trying to scroll the picker\n         * column to the correct time value.\n         *\n         * This will correctly scroll the element position to the correct time value,\n         * before the popover is fully presented.\n         */\n        const cols = ev.target.querySelectorAll('ion-picker-column-internal'); // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n\n        cols.forEach(col => col.scrollActiveItemIntoView());\n      },\n      style: {\n        '--offset-y': '-10px',\n        '--min-width': 'fit-content'\n      },\n      // Allow native browser keyboard events to support up/down/home/end key\n      // navigation within the time picker.\n      keyboardEvents: true,\n      ref: el => this.popoverRef = el\n    }, this.renderWheelPicker('time'))];\n  }\n\n  renderCalendarViewHeader(mode) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n\n    return h(\"div\", {\n      class: \"datetime-header\"\n    }, h(\"div\", {\n      class: \"datetime-title\"\n    }, h(\"slot\", {\n      name: \"title\"\n    }, \"Select Date\")), mode === 'md' && !this.multiple && h(\"div\", {\n      class: \"datetime-selected-date\"\n    }, getMonthAndDay(this.locale, this.activeParts)));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n\n\n  renderTime() {\n    const {\n      presentation\n    } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return h(\"div\", {\n      class: \"datetime-time\"\n    }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay());\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n\n\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", {\n      class: \"datetime-year\"\n    }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n\n\n  renderDatetime(mode) {\n    const {\n      presentation,\n      preferWheel\n    } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderWheelView(), this.renderFooter()];\n    }\n\n    switch (presentation) {\n      case 'date-time':\n        return [this.renderCalendarViewHeader(mode), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderTime(), this.renderFooter()];\n\n      case 'time-date':\n        return [this.renderCalendarViewHeader(mode), this.renderTime(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n\n      case 'time':\n        return [this.renderTime(), this.renderFooter()];\n\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderWheelView(), this.renderFooter()];\n\n      default:\n        return [this.renderCalendarViewHeader(mode), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n    }\n  }\n\n  render() {\n    const {\n      name,\n      value,\n      disabled,\n      el,\n      color,\n      isPresented,\n      readonly,\n      showMonthAndYear,\n      preferWheel,\n      presentation,\n      size\n    } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    const hasGrid = hasDatePresentation && !preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return h(Host, {\n      \"aria-disabled\": disabled ? 'true' : null,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-presented']: isPresented,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: hasGrid\n      }))\n    }, this.renderDatetime(mode));\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"],\n      \"min\": [\"minChanged\"],\n      \"max\": [\"maxChanged\"],\n      \"yearValues\": [\"yearValuesChanged\"],\n      \"monthValues\": [\"monthValuesChanged\"],\n      \"dayValues\": [\"dayValuesChanged\"],\n      \"hourValues\": [\"hourValuesChanged\"],\n      \"minuteValues\": [\"minuteValuesChanged\"],\n      \"activeParts\": [\"activePartsChanged\"],\n      \"value\": [\"valueChanged\"]\n    };\n  }\n\n  static get style() {\n    return {\n      ios: datetimeIosCss,\n      md: datetimeMdCss\n    };\n  }\n\n}, [33, \"ion-datetime\", {\n  \"color\": [1],\n  \"name\": [1],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"isDateEnabled\": [16],\n  \"min\": [1025],\n  \"max\": [1025],\n  \"presentation\": [1],\n  \"cancelText\": [1, \"cancel-text\"],\n  \"doneText\": [1, \"done-text\"],\n  \"clearText\": [1, \"clear-text\"],\n  \"yearValues\": [8, \"year-values\"],\n  \"monthValues\": [8, \"month-values\"],\n  \"dayValues\": [8, \"day-values\"],\n  \"hourValues\": [8, \"hour-values\"],\n  \"minuteValues\": [8, \"minute-values\"],\n  \"locale\": [1],\n  \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n  \"multiple\": [4],\n  \"value\": [1025],\n  \"showDefaultTitle\": [4, \"show-default-title\"],\n  \"showDefaultButtons\": [4, \"show-default-buttons\"],\n  \"showClearButton\": [4, \"show-clear-button\"],\n  \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n  \"hourCycle\": [1, \"hour-cycle\"],\n  \"size\": [1],\n  \"preferWheel\": [4, \"prefer-wheel\"],\n  \"showMonthAndYear\": [32],\n  \"activeParts\": [32],\n  \"workingParts\": [32],\n  \"isPresented\": [32],\n  \"isTimePopoverOpen\": [32],\n  \"confirm\": [64],\n  \"reset\": [64],\n  \"cancel\": [64]\n}]);\nlet datetimeIds = 0;\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-datetime\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Datetime);\n        }\n\n        break;\n\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$c();\n        }\n\n        break;\n\n      case \"ion-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$b();\n        }\n\n        break;\n\n      case \"ion-buttons\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$a();\n        }\n\n        break;\n\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$9();\n        }\n\n        break;\n\n      case \"ion-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$8();\n        }\n\n        break;\n\n      case \"ion-label\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$7();\n        }\n\n        break;\n\n      case \"ion-note\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$6();\n        }\n\n        break;\n\n      case \"ion-picker-column-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n\n        break;\n\n      case \"ion-picker-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n\n        break;\n\n      case \"ion-popover\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n\n        break;\n\n      case \"ion-ripple-effect\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonDatetime, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","writeTask","h","Host","a","chevronBack","f","chevronForward","c","chevronDown","g","caretUpSharp","caretDownSharp","b","getIonMode","startFocusVisible","r","raf","d","renderHiddenInput","getElementRoot","p","printIonWarning","printIonError","i","isRTL","createColorClasses","generateDayAriaLabel","isBefore","isAfter","isSameDay","getPreviousMonth","getNextMonth","parseDate","e","getToday","getPartsFromCalendarDay","getEndOfWeek","j","getStartOfWeek","k","getPreviousDay","l","getNextDay","m","getPreviousWeek","n","getNextWeek","w","warnIfValueOutOfBounds","o","convertToArrayOfNumbers","q","convertDataToISO","getCombinedDateColumnData","s","getMonthColumnData","t","getDayColumnData","u","getYearColumnData","v","isMonthFirstLocale","x","getTimeColumnsData","y","isLocaleDayPeriodRTL","z","getMonthAndYear","A","getDaysOfWeek","B","getDaysOfMonth","C","generateMonths","D","is24Hour","E","getLocalizedTime","F","getMonthAndDay","G","formatValue","H","getNextYear","I","getPreviousYear","J","clampDate","K","parseAmPm","L","calculateHourFromAMPM","defineCustomElement$c","defineCustomElement$b","defineCustomElement$a","defineCustomElement$9","defineCustomElement$8","defineCustomElement$7","defineCustomElement$6","defineCustomElement$5","defineCustomElement$4","defineCustomElement$3","defineCustomElement$2","isYearDisabled","refYear","minParts","maxParts","year","isDayDisabled","refParts","dayValues","day","undefined","includes","getCalendarDayState","locale","activeParts","todayParts","activePartsArray","Array","isArray","isActive","find","parts","isToday","disabled","ariaSelected","ariaLabel","isMonthDisabled","isPrevMonthDisabled","prevMonth","Object","assign","isNextMonthDisabled","nextMonth","datetimeIosCss","datetimeMdCss","Datetime","constructor","__registerHost","__attachShadow","ionCancel","ionChange","ionFocus","ionBlur","ionStyle","ionRender","inputId","datetimeIds","highlightActiveParts","prevPresentation","showMonthAndYear","month","hour","minute","ampm","workingParts","isPresented","isTimePopoverOpen","color","name","readonly","presentation","cancelText","doneText","clearText","firstDayOfWeek","multiple","showDefaultTitle","showDefaultButtons","showClearButton","showDefaultTimeLabel","size","preferWheel","closeParentOverlay","popoverOrModal","el","closest","dismiss","setWorkingParts","setActiveParts","removeDate","activePartsClone","filter","hasSlottedButtons","querySelector","confirm","getCalendarBodyEl","_a","calendarBodyRef","shadowRoot","initializeKeyboardListeners","root","currentMonth","checkCalendarBodyFocus","ev","record","oldValue","classList","contains","focusWorkingDay","mo","MutationObserver","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","partsToFocus","key","preventDefault","shiftKey","requestAnimationFrame","padding","querySelectorAll","dayEl","length","focus","processMinParts","min","processMaxParts","max","initializeCalendarListener","months","startMonth","workingMonth","endMonth","mode","needsiOSRubberBandFix","navigator","maxTouchPoints","scrollLeft","clientWidth","getChangedMonth","box","getBoundingClientRect","elementAtCenter","elementFromPoint","width","height","monthBox","Math","abs","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","value","valueToProcess","singleValue","tzOffset","onFocus","emit","onBlur","hasValue","left","offsetWidth","scrollTo","top","behavior","toggleMonthAndYearView","disabledChanged","emitStyle","minChanged","maxChanged","yearValuesChanged","parsedYearValues","yearValues","monthValuesChanged","parsedMonthValues","monthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","hourValues","minuteValuesChanged","parsedMinuteValues","minuteValues","activePartsChanged","valueChanged","valueDateParts","closeOverlay","isCalendarPicker","activePartsIsArray","dates","map","str","Date","getTimezoneOffset","date","reset","startDate","cancel","connectedCallback","clearFocusVisible","destroy","disconnectedCallback","initializeListeners","componentDidLoad","visibleCallback","entries","isIntersecting","add","visibleIO","IntersectionObserver","threshold","hiddenCallback","remove","hiddenIO","stopPropagation","componentDidRender","componentWillLoad","interactive","datetime","renderFooter","clearButtonClick","class","id","onClick","renderWheelPicker","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","isDateEnabled","monthsToRender","result","items","itemObject","index","referenceParts","todayString","onIonChange","detail","findPart","shouldRenderMonths","shouldRenderDays","days","dayObject","valueNum","parseInt","shouldRenderYears","years","showMonthFirst","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","hoursData","minutesData","dayPeriodData","hourCycle","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","order","renderWheelView","columnOrder","renderCalendarHeader","expandedIcon","collapsedIcon","prevMonthDisabled","nextMonthDisabled","button","lines","icon","lazy","slot","flipRtl","renderMonth","yearAllowed","monthAllowed","isCalMonthDisabled","swipeDisabled","isWorkingMonth","dateObject","dayOfWeek","isCalDayDisabled","tabindex","renderCalendarBody","ref","renderCalendar","renderTimeLabel","hasSlottedTimeLabel","renderTimeOverlay","use24Hour","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","alignment","translucent","overlayIndex","arrow","onWillPresent","cols","forEach","col","scrollActiveItemIntoView","keyboardEvents","renderCalendarViewHeader","hasSlottedTitle","renderTime","timeOnlyPresentation","renderCalendarViewMonthYearPicker","renderDatetime","hasWheelVariant","render","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","hasDatePresentation","hasGrid","watchers","ios","md","defineCustomElement$1","customElements","components","tagName","get","define","IonDatetime","defineCustomElement"],"sources":["/home/h1r0sh1/Documents/work-space/project-news/node_modules/@ionic/core/components/ion-datetime.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index6.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, d as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { p as printIonWarning, a as printIonError } from './index7.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { g as generateDayAriaLabel, i as isBefore, a as isAfter, b as isSameDay, c as getPreviousMonth, d as getNextMonth, p as parseDate, e as getToday, f as getPartsFromCalendarDay, h as getEndOfWeek, j as getStartOfWeek, k as getPreviousDay, l as getNextDay, m as getPreviousWeek, n as getNextWeek, w as warnIfValueOutOfBounds, o as convertToArrayOfNumbers, q as convertDataToISO, r as getCombinedDateColumnData, s as getMonthColumnData, t as getDayColumnData, u as getYearColumnData, v as isMonthFirstLocale, x as getTimeColumnsData, y as isLocaleDayPeriodRTL, z as getMonthAndYear, A as getDaysOfWeek, B as getDaysOfMonth, C as generateMonths, D as is24Hour, E as getLocalizedTime, F as getMonthAndDay, G as formatValue, H as getNextYear, I as getPreviousYear, J as clampDate, K as parseAmPm, L as calculateHourFromAMPM } from './parse.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts,\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n  return isMonthDisabled(nextMonth, {\n    maxParts,\n  });\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color);font-size:14px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr);height:100%}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:3px;padding-bottom:0px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\n\nconst Datetime = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionRender = createEvent(this, \"ionRender\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    /**\n     * Whether to highlight the active day with a solid circle (as opposed\n     * to the outline circle around today). If you don't specify an initial\n     * value for the datetime, it doesn't automatically init to a default to\n     * avoid unwanted change events firing. If the solid circle were still\n     * shown then, it would look like a date had already been selected, which\n     * is misleading UX.\n     */\n    this.highlightActiveParts = false;\n    this.todayParts = parseDate(getToday());\n    this.prevPresentation = null;\n    this.showMonthAndYear = false;\n    this.activeParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n    };\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n    };\n    this.isPresented = false;\n    this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n    this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, multiple dates can be selected at once. Only\n     * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n     */\n    this.multiple = false;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. On `ios` mode this will include the\n     * slotted title, and on `md` mode this will include\n     * the slotted title and the selected date.\n     */\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    this.size = 'fixed';\n    /**\n     * If `true`, a wheel picker will be rendered instead of a calendar grid\n     * where possible. If `false`, a calendar grid will be rendered instead of\n     * a wheel picker where possible.\n     *\n     * A wheel picker can be rendered instead of a grid when `presentation` is\n     * one of the following values: `'date'`, `'date-time'`, or `'time-date'`.\n     *\n     * A wheel picker will always be rendered regardless of\n     * the `preferWheel` value when `presentation` is one of the following values:\n     * `'time'`, `'month'`, `'month-year'`, or `'year'`.\n     */\n    this.preferWheel = false;\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = (parts) => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts, removeDate = false) => {\n      const { multiple, activePartsClone, highlightActiveParts } = this;\n      if (multiple) {\n        /**\n         * We read from activePartsClone here because valueChanged() only updates that,\n         * so it's the more reliable source of truth. If we read from activeParts, then\n         * if you click July 1, manually set the value to July 2, and then click July 3,\n         * the new value would be [July 1, July 3], ignoring the value set.\n         *\n         * We can then pass the new value to activeParts (rather than activePartsClone)\n         * since the clone will be updated automatically by activePartsChanged().\n         */\n        const activePartsArray = Array.isArray(activePartsClone) ? activePartsClone : [activePartsClone];\n        if (removeDate) {\n          this.activeParts = activePartsArray.filter((p) => !isSameDay(p, parts));\n        }\n        else if (highlightActiveParts) {\n          this.activeParts = [...activePartsArray, parts];\n        }\n        else {\n          /**\n           * If highlightActiveParts is false, that means we just have a\n           * default value of today in activeParts; we need to replace that\n           * rather than adding to it since it's just a placeholder.\n           */\n          this.activeParts = [parts];\n        }\n      }\n      else {\n        this.activeParts = Object.assign({}, parts);\n      }\n      /**\n       * Now that the user has interacted somehow to select something, we can\n       * show the solid highlight. This needs to be done after checking it above,\n       * but before the confirm call below.\n       *\n       * Note that for datetimes with confirm/cancel buttons, the value\n       * isn't updated until you call confirm(). We need to bring the\n       * solid circle back on day click for UX reasons, rather than only\n       * show the circle if `value` is truthy.\n       */\n      this.highlightActiveParts = true;\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    /**\n     * Stencil sometimes sets calendarBodyRef to null on rerender, even though\n     * the element is present. Query for it manually as a fallback.\n     *\n     * TODO(FW-901) Remove when issue is resolved: https://github.com/ionic-team/stencil/issues/3253\n     */\n    this.getCalendarBodyEl = () => {\n      var _a;\n      return this.calendarBodyRef || ((_a = this.el.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.calendar-body'));\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = (ev) => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', (ev) => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = (currentMonth) => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const { day } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day:nth-of-type(${padding.length + day})`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      if (this.min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      const { month, day, year, hour, minute } = parseDate(this.min);\n      this.minParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n      };\n    };\n    this.processMaxParts = () => {\n      if (this.max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      const { month, day, year, hour, minute } = parseDate(this.max);\n      this.maxParts = {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n      };\n    };\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const getChangedMonth = (parts) => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          const root = this.el.shadowRoot;\n          /**\n           * Get the element that is in the center of the calendar body.\n           * This will be an element inside of the active month.\n           */\n          const elementAtCenter = root.elementFromPoint(box.x + box.width / 2, box.y + box.height / 2);\n          /**\n           * If there is no element then the\n           * component may be re-rendering on a slow device.\n           */\n          if (!elementAtCenter)\n            return;\n          const month = elementAtCenter.closest('.calendar-month');\n          if (!month)\n            return;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2)\n            return;\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          }\n          else if (month === endMonth) {\n            return getNextMonth(parts);\n          }\n          else {\n            return;\n          }\n        };\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate)\n            return;\n          const { month, day, year } = newDate;\n          if (isMonthDisabled({ month, year, day: null }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        let appliediOSRubberBandFix = false;\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const { destroyCalendarListener, destroyKeyboardMO } = this;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    this.processValue = (value) => {\n      this.highlightActiveParts = !!value;\n      let valueToProcess = parseDate(value || getToday());\n      const { minParts, maxParts, multiple } = this;\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        valueToProcess = valueToProcess[0];\n      }\n      warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      const { month, day, year, hour, minute, tzOffset } = clampDate(singleValue, minParts, maxParts);\n      const ampm = parseAmPm(hour);\n      this.setWorkingParts({\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm,\n      });\n      if (Array.isArray(valueToProcess)) {\n        this.activeParts = [...valueToProcess];\n      }\n      else {\n        this.activeParts = {\n          month,\n          day,\n          year,\n          hour,\n          minute,\n          tzOffset,\n          ampm,\n        };\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null && this.value !== '';\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth',\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.getCalendarBodyEl();\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  activePartsChanged() {\n    this.activePartsClone = this.activeParts;\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    const { value, minParts, maxParts, workingParts, multiple } = this;\n    if (this.hasValue()) {\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        return; // setting this.value will trigger re-run of this function\n      }\n      /**\n       * Clones the value of the `activeParts` to the private clone, to update\n       * the date display on the current render cycle without causing another render.\n       *\n       * This allows us to update the current value's date/time display without\n       * refocusing or shifting the user's display (leaves the user in place).\n       */\n      const valueDateParts = parseDate(value);\n      if (valueDateParts) {\n        warnIfValueOutOfBounds(valueDateParts, minParts, maxParts);\n        if (Array.isArray(valueDateParts)) {\n          this.activePartsClone = [...valueDateParts];\n        }\n        else {\n          const { month, day, year, hour, minute } = valueDateParts;\n          const ampm = hour != null ? (hour >= 12 ? 'pm' : 'am') : undefined;\n          this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), { month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm });\n          /**\n           * The working parts am/pm value must be updated when the value changes, to\n           * ensure the time picker hour column values are generated correctly.\n           *\n           * Note that we don't need to do this if valueDateParts is an array, since\n           * multiple=\"true\" does not apply to time pickers.\n           */\n          this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm }));\n        }\n      }\n      else {\n        printIonWarning(`Unable to parse date string: ${value}. Please provide a valid ISO 8601 datetime string.`);\n      }\n    }\n    this.emitStyle();\n    this.ionChange.emit({ value });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm(closeOverlay = false) {\n    const { highlightActiveParts, isCalendarPicker, activeParts } = this;\n    /**\n     * We only update the value if the presentation is not a calendar picker,\n     * or if `highlightActiveParts` is true; indicating that the user\n     * has selected a date from the calendar picker.\n     *\n     * Otherwise \"today\" would accidentally be set as the value.\n     */\n    if (highlightActiveParts || !isCalendarPicker) {\n      const activePartsIsArray = Array.isArray(activeParts);\n      if (activePartsIsArray && activeParts.length === 0) {\n        this.value = undefined;\n      }\n      else {\n        /**\n         * Prevent convertDataToISO from doing any\n         * kind of transformation based on timezone\n         * This cancels out any change it attempts to make\n         *\n         * Important: Take the timezone offset based on\n         * the date that is currently selected, otherwise\n         * there can be 1 hr difference when dealing w/ DST\n         */\n        if (activePartsIsArray) {\n          const dates = convertDataToISO(activeParts).map((str) => new Date(str));\n          for (let i = 0; i < dates.length; i++) {\n            activeParts[i].tzOffset = dates[i].getTimezoneOffset() * -1;\n          }\n        }\n        else {\n          const date = new Date(convertDataToISO(activeParts));\n          activeParts.tzOffset = date.getTimezoneOffset() * -1;\n        }\n        this.value = convertDataToISO(activeParts);\n      }\n    }\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel(closeOverlay = false) {\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  get isCalendarPicker() {\n    const { presentation } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = (entries) => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01 });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = (entries) => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0 });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n    root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const { presentation, prevPresentation } = this;\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n  componentWillLoad() {\n    const { el, multiple, presentation, preferWheel } = this;\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n      if (preferWheel) {\n        printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    this.processMinParts();\n    this.processMaxParts();\n    this.processValue(this.value);\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n  renderFooter() {\n    const { showDefaultButtons, showClearButton } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.value = undefined;\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton,\n      } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true) }, this.cancelText)), h(\"div\", null, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick() }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true) }, this.doneText)))))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n  renderWheelPicker(forcePresentation = this.presentation) {\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date'\n      ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n      : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker-internal\", null, renderArray);\n  }\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n      ? this.renderCombinedDatePickerColumn()\n      : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n  renderCombinedDatePickerColumn() {\n    const { activeParts, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n    const monthsToRender = generateMonths(workingParts);\n    /**\n     * generateMonths returns the day data as well,\n     * but we do not want the day value to act as a max/min\n     * on the data we are going to generate.\n     */\n    for (let i = 0; i <= monthsToRender.length - 1; i++) {\n      monthsToRender[i].day = null;\n    }\n    /**\n     * If developers have provided their own\n     * min/max values, use that instead. Otherwise,\n     * fallback to the default range of 3 months.\n     */\n    const min = minParts || monthsToRender[0];\n    const max = maxParts || monthsToRender[monthsToRender.length - 1];\n    const result = getCombinedDateColumnData(locale, workingParts, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, itemObject), { disabled });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, default it to today.\n     */\n    const todayString = workingParts.day\n      ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n      : `${todayParts.year}-${todayParts.month}-${todayParts.day}`;\n    return (h(\"ion-picker-column-internal\", { class: \"date-column\", color: this.color, items: items, value: todayString, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        const { value } = ev.detail;\n        const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), findPart));\n        }\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const { workingParts, isDateEnabled } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths\n      ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n      : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays\n      ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n      : [];\n    if (isDateEnabled) {\n      days = days.map((dayObject) => {\n        const { value } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year,\n        };\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, dayObject), { disabled });\n      });\n    }\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears\n      ? getYearColumnData(this.todayParts, this.minParts, this.maxParts, this.parsedYearValues)\n      : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n    const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n    let renderArray = [];\n    if (showMonthFirst) {\n      renderArray = [\n        this.renderMonthPickerColumn(months),\n        this.renderDayPickerColumn(days),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    else {\n      renderArray = [\n        this.renderDayPickerColumn(days),\n        this.renderMonthPickerColumn(months),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    return renderArray;\n  }\n  renderDayPickerColumn(days) {\n    var _a;\n    if (days.length === 0) {\n      return [];\n    }\n    const { activeParts, workingParts } = this;\n    return (h(\"ion-picker-column-internal\", { class: \"day-column\", color: this.color, items: days, value: (_a = (workingParts.day || this.todayParts.day)) !== null && _a !== void 0 ? _a : undefined, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), { day: ev.detail.value }));\n        }\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n    const { activeParts, workingParts } = this;\n    return (h(\"ion-picker-column-internal\", { class: \"month-column\", color: this.color, items: months, value: workingParts.month, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), { month: ev.detail.value }));\n        }\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n    const { activeParts, workingParts } = this;\n    return (h(\"ion-picker-column-internal\", { class: \"year-column\", color: this.color, items: years, value: workingParts.year, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n        if (!Array.isArray(activeParts)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activeParts), { year: ev.detail.value }));\n        }\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n    const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, this.value ? this.minParts : undefined, this.value ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [\n      this.renderHourPickerColumn(hoursData),\n      this.renderMinutePickerColumn(minutesData),\n      this.renderDayPeriodPickerColumn(dayPeriodData),\n    ];\n  }\n  renderHourPickerColumn(hoursData) {\n    const { workingParts, activePartsClone } = this;\n    if (hoursData.length === 0)\n      return [];\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePartsClone.hour, items: hoursData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n        if (!Array.isArray(activePartsClone)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { hour: ev.detail.value }));\n        }\n        ev.stopPropagation();\n      } }));\n  }\n  renderMinutePickerColumn(minutesData) {\n    const { workingParts, activePartsClone } = this;\n    if (minutesData.length === 0)\n      return [];\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePartsClone.minute, items: minutesData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n        if (!Array.isArray(activePartsClone)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { minute: ev.detail.value }));\n        }\n        ev.stopPropagation();\n      } }));\n  }\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const { workingParts, activePartsClone } = this;\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return (h(\"ion-picker-column-internal\", { style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, value: activePartsClone.ampm, items: dayPeriodData, onIonChange: (ev) => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n        if (!Array.isArray(activePartsClone)) {\n          this.setActiveParts(Object.assign(Object.assign({}, activePartsClone), { ampm: ev.detail.value, hour }));\n        }\n        ev.stopPropagation();\n      } }));\n  }\n  renderWheelView(forcePresentation) {\n    const { locale } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return (h(\"div\", { class: {\n        [`wheel-order-${columnOrder}`]: true,\n      } }, this.renderWheelPicker(forcePresentation)));\n  }\n  /**\n   * Grid Render Methods\n   */\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n    return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { button: true, detail: false, lines: \"none\", onClick: () => this.toggleMonthAndYearView() }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), ' ', h(\"ion-icon\", { icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n      return h(\"div\", { class: \"day-of-week\" }, d);\n    }))));\n  }\n  renderMonth(month, year) {\n    const { highlightActiveParts } = this;\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const swipeDisabled = isMonthDisabled({\n      month,\n      year,\n      day: null,\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    return (h(\"div\", { class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n      } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const { day, dayOfWeek } = dateObject;\n      const { isDateEnabled, multiple } = this;\n      const referenceParts = { month, day, year };\n      const { isActive, isToday, ariaLabel, ariaSelected, disabled } = getCalendarDayState(this.locale, referenceParts, this.activePartsClone, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      let isCalDayDisabled = isCalMonthDisabled || disabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n      }\n      return (h(\"button\", { tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isCalDayDisabled, class: {\n          'calendar-day-padding': day === null,\n          'calendar-day': true,\n          'calendar-day-active': isActive && highlightActiveParts,\n          'calendar-day-today': isToday,\n        }, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n          if (day === null) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n            day,\n            year }));\n          // multiple only needs date info, so we can wipe out other fields like time\n          if (multiple) {\n            this.setActiveParts({\n              month,\n              day,\n              year,\n            }, isActive && highlightActiveParts);\n          }\n          else {\n            this.setActiveParts(Object.assign(Object.assign({}, this.activeParts), { month,\n              day,\n              year }));\n          }\n        } }, day));\n    }))));\n  }\n  renderCalendarBody() {\n    return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts).map(({ month, year }) => {\n      return this.renderMonth(month, year);\n    })));\n  }\n  renderCalendar(mode) {\n    return (h(\"div\", { class: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", { name: \"time-label\" }, \"Time\");\n  }\n  renderTimeOverlay() {\n    const use24Hour = is24Hour(this.locale, this.hourCycle);\n    return [\n      h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n      h(\"button\", { class: {\n          'time-body': true,\n          'time-body-active': this.isTimePopoverOpen,\n        }, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", onClick: async (ev) => {\n          const { popoverRef } = this;\n          if (popoverRef) {\n            this.isTimePopoverOpen = true;\n            popoverRef.present(new CustomEvent('ionShadowTarget', {\n              detail: {\n                ionShadowTarget: ev.target,\n              },\n            }));\n            await popoverRef.onWillDismiss();\n            this.isTimePopoverOpen = false;\n          }\n        } }, getLocalizedTime(this.locale, this.activePartsClone, use24Hour)),\n      h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n          /**\n           * Intersection Observers do not consistently fire between Blink and Webkit\n           * when toggling the visibility of the popover and trying to scroll the picker\n           * column to the correct time value.\n           *\n           * This will correctly scroll the element position to the correct time value,\n           * before the popover is fully presented.\n           */\n          const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n          // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n          cols.forEach((col) => col.scrollActiveItemIntoView());\n        }, style: {\n          '--offset-y': '-10px',\n          '--min-width': 'fit-content',\n        },\n        // Allow native browser keyboard events to support up/down/home/end key\n        // navigation within the time picker.\n        keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n    ];\n  }\n  renderCalendarViewHeader(mode) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), mode === 'md' && !this.multiple && (h(\"div\", { class: \"datetime-selected-date\" }, getMonthAndDay(this.locale, this.activeParts)))));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const { presentation } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n  renderDatetime(mode) {\n    const { presentation, preferWheel } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderWheelView(), this.renderFooter()];\n    }\n    switch (presentation) {\n      case 'date-time':\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderTime(),\n          this.renderFooter(),\n        ];\n      case 'time-date':\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderTime(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n      case 'time':\n        return [this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderWheelView(), this.renderFooter()];\n      default:\n        return [\n          this.renderCalendarViewHeader(mode),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n    }\n  }\n  render() {\n    const { name, value, disabled, el, color, isPresented, readonly, showMonthAndYear, preferWheel, presentation, size, } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    const hasGrid = hasDatePresentation && !preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-presented']: isPresented,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: hasGrid,\n      })) }, this.renderDatetime(mode)));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"],\n    \"min\": [\"minChanged\"],\n    \"max\": [\"maxChanged\"],\n    \"yearValues\": [\"yearValuesChanged\"],\n    \"monthValues\": [\"monthValuesChanged\"],\n    \"dayValues\": [\"dayValuesChanged\"],\n    \"hourValues\": [\"hourValuesChanged\"],\n    \"minuteValues\": [\"minuteValuesChanged\"],\n    \"activeParts\": [\"activePartsChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n  static get style() { return {\n    ios: datetimeIosCss,\n    md: datetimeMdCss\n  }; }\n}, [33, \"ion-datetime\", {\n    \"color\": [1],\n    \"name\": [1],\n    \"disabled\": [4],\n    \"readonly\": [4],\n    \"isDateEnabled\": [16],\n    \"min\": [1025],\n    \"max\": [1025],\n    \"presentation\": [1],\n    \"cancelText\": [1, \"cancel-text\"],\n    \"doneText\": [1, \"done-text\"],\n    \"clearText\": [1, \"clear-text\"],\n    \"yearValues\": [8, \"year-values\"],\n    \"monthValues\": [8, \"month-values\"],\n    \"dayValues\": [8, \"day-values\"],\n    \"hourValues\": [8, \"hour-values\"],\n    \"minuteValues\": [8, \"minute-values\"],\n    \"locale\": [1],\n    \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n    \"multiple\": [4],\n    \"value\": [1025],\n    \"showDefaultTitle\": [4, \"show-default-title\"],\n    \"showDefaultButtons\": [4, \"show-default-buttons\"],\n    \"showClearButton\": [4, \"show-clear-button\"],\n    \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n    \"hourCycle\": [1, \"hour-cycle\"],\n    \"size\": [1],\n    \"preferWheel\": [4, \"prefer-wheel\"],\n    \"showMonthAndYear\": [32],\n    \"activeParts\": [32],\n    \"workingParts\": [32],\n    \"isPresented\": [32],\n    \"isTimePopoverOpen\": [32],\n    \"confirm\": [64],\n    \"reset\": [64],\n    \"cancel\": [64]\n  }]);\nlet datetimeIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-datetime\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Datetime);\n      }\n      break;\n    case \"ion-backdrop\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$c();\n      }\n      break;\n    case \"ion-button\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$b();\n      }\n      break;\n    case \"ion-buttons\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$a();\n      }\n      break;\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$9();\n      }\n      break;\n    case \"ion-item\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$8();\n      }\n      break;\n    case \"ion-label\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$7();\n      }\n      break;\n    case \"ion-note\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$6();\n      }\n      break;\n    case \"ion-picker-column-internal\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$5();\n      }\n      break;\n    case \"ion-picker-internal\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$4();\n      }\n      break;\n    case \"ion-popover\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$3();\n      }\n      break;\n    case \"ion-ripple-effect\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$2();\n      }\n      break;\n  } });\n}\n\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonDatetime, defineCustomElement };\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,kBAAT,EAA6BC,WAA7B,EAA0CC,WAA1C,EAAuDC,SAAvD,EAAkEC,CAAlE,EAAqEC,IAArE,QAAiF,+BAAjF;AACA,SAASC,CAAC,IAAIC,WAAd,EAA2BC,CAAC,IAAIC,cAAhC,EAAgDC,CAAC,IAAIC,WAArD,EAAkEC,CAAC,IAAIC,YAAvE,EAAqFT,CAAC,IAAIU,cAA1F,QAAgH,aAAhH;AACA,SAASC,CAAC,IAAIC,UAAd,QAAgC,mBAAhC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,CAAC,IAAIC,GAAd,EAAmBC,CAAC,IAAIC,iBAAxB,EAA2CT,CAAC,IAAIU,cAAhD,QAAsE,cAAtE;AACA,SAASC,CAAC,IAAIC,eAAd,EAA+BlB,CAAC,IAAImB,aAApC,QAAyD,aAAzD;AACA,SAASC,CAAC,IAAIC,KAAd,QAA2B,UAA3B;AACA,SAASjB,CAAC,IAAIkB,kBAAd,QAAwC,YAAxC;AACA,SAAShB,CAAC,IAAIiB,oBAAd,EAAoCH,CAAC,IAAII,QAAzC,EAAmDxB,CAAC,IAAIyB,OAAxD,EAAiEhB,CAAC,IAAIiB,SAAtE,EAAiFtB,CAAC,IAAIuB,gBAAtF,EAAwGb,CAAC,IAAIc,YAA7G,EAA2HX,CAAC,IAAIY,SAAhI,EAA2IC,CAAC,IAAIC,QAAhJ,EAA0J7B,CAAC,IAAI8B,uBAA/J,EAAwLlC,CAAC,IAAImC,YAA7L,EAA2MC,CAAC,IAAIC,cAAhN,EAAgOC,CAAC,IAAIC,cAArO,EAAqPC,CAAC,IAAIC,UAA1P,EAAsQC,CAAC,IAAIC,eAA3Q,EAA4RC,CAAC,IAAIC,WAAjS,EAA8SC,CAAC,IAAIC,sBAAnT,EAA2UC,CAAC,IAAIC,uBAAhV,EAAyWC,CAAC,IAAIC,gBAA9W,EAAgYrC,CAAC,IAAIsC,yBAArY,EAAgaC,CAAC,IAAIC,kBAAra,EAAybC,CAAC,IAAIC,gBAA9b,EAAgdC,CAAC,IAAIC,iBAArd,EAAweC,CAAC,IAAIC,kBAA7e,EAAigBC,CAAC,IAAIC,kBAAtgB,EAA0hBC,CAAC,IAAIC,oBAA/hB,EAAqjBC,CAAC,IAAIC,eAA1jB,EAA2kBC,CAAC,IAAIC,aAAhlB,EAA+lBC,CAAC,IAAIC,cAApmB,EAAonBC,CAAC,IAAIC,cAAznB,EAAyoBC,CAAC,IAAIC,QAA9oB,EAAwpBC,CAAC,IAAIC,gBAA7pB,EAA+qBC,CAAC,IAAIC,cAAprB,EAAosBC,CAAC,IAAIC,WAAzsB,EAAstBC,CAAC,IAAIC,WAA3tB,EAAwuBC,CAAC,IAAIC,eAA7uB,EAA8vBC,CAAC,IAAIC,SAAnwB,EAA8wBC,CAAC,IAAIC,SAAnxB,EAA8xBC,CAAC,IAAIC,qBAAnyB,QAAg0B,YAAh0B;AACA,SAAS1E,CAAC,IAAI2E,qBAAd,QAA2C,eAA3C;AACA,SAAS3E,CAAC,IAAI4E,qBAAd,QAA2C,aAA3C;AACA,SAAS5E,CAAC,IAAI6E,qBAAd,QAA2C,cAA3C;AACA,SAAS7E,CAAC,IAAI8E,qBAAd,QAA2C,WAA3C;AACA,SAAS9E,CAAC,IAAI+E,qBAAd,QAA2C,WAA3C;AACA,SAAS/E,CAAC,IAAIgF,qBAAd,QAA2C,YAA3C;AACA,SAAShF,CAAC,IAAIiF,qBAAd,QAA2C,WAA3C;AACA,SAASjF,CAAC,IAAIkF,qBAAd,QAA2C,6BAA3C;AACA,SAASlF,CAAC,IAAImF,qBAAd,QAA2C,sBAA3C;AACA,SAASnF,CAAC,IAAIoF,qBAAd,QAA2C,cAA3C;AACA,SAASpF,CAAC,IAAIqF,qBAAd,QAA2C,oBAA3C;;AAEA,MAAMC,cAAc,GAAG,CAACC,OAAD,EAAUC,QAAV,EAAoBC,QAApB,KAAiC;EACtD,IAAID,QAAQ,IAAIA,QAAQ,CAACE,IAAT,GAAgBH,OAAhC,EAAyC;IACvC,OAAO,IAAP;EACD;;EACD,IAAIE,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBH,OAAhC,EAAyC;IACvC,OAAO,IAAP;EACD;;EACD,OAAO,KAAP;AACD,CARD;AASA;AACA;AACA;AACA;AACA;;;AACA,MAAMI,aAAa,GAAG,CAACC,QAAD,EAAWJ,QAAX,EAAqBC,QAArB,EAA+BI,SAA/B,KAA6C;EACjE;AACF;AACA;AACA;EACE,IAAID,QAAQ,CAACE,GAAT,KAAiB,IAArB,EAA2B;IACzB,OAAO,IAAP;EACD;EACD;AACF;AACA;AACA;AACA;;;EACE,IAAID,SAAS,KAAKE,SAAd,IAA2B,CAACF,SAAS,CAACG,QAAV,CAAmBJ,QAAQ,CAACE,GAA5B,CAAhC,EAAkE;IAChE,OAAO,IAAP;EACD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE,IAAIN,QAAQ,IAAI9E,QAAQ,CAACkF,QAAD,EAAWJ,QAAX,CAAxB,EAA8C;IAC5C,OAAO,IAAP;EACD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE,IAAIC,QAAQ,IAAI9E,OAAO,CAACiF,QAAD,EAAWH,QAAX,CAAvB,EAA6C;IAC3C,OAAO,IAAP;EACD;EACD;AACF;AACA;AACA;AACA;;;EACE,OAAO,KAAP;AACD,CAlDD;AAmDA;AACA;AACA;AACA;;;AACA,MAAMQ,mBAAmB,GAAG,CAACC,MAAD,EAASN,QAAT,EAAmBO,WAAnB,EAAgCC,UAAhC,EAA4CZ,QAA5C,EAAsDC,QAAtD,EAAgEI,SAAhE,KAA8E;EACxG;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMQ,gBAAgB,GAAGC,KAAK,CAACC,OAAN,CAAcJ,WAAd,IAA6BA,WAA7B,GAA2C,CAACA,WAAD,CAApE;EACA;AACF;AACA;AACA;;EACE,MAAMK,QAAQ,GAAGH,gBAAgB,CAACI,IAAjB,CAAuBC,KAAD,IAAW9F,SAAS,CAACgF,QAAD,EAAWc,KAAX,CAA1C,MAAiEX,SAAlF;EACA,MAAMY,OAAO,GAAG/F,SAAS,CAACgF,QAAD,EAAWQ,UAAX,CAAzB;EACA,MAAMQ,QAAQ,GAAGjB,aAAa,CAACC,QAAD,EAAWJ,QAAX,EAAqBC,QAArB,EAA+BI,SAA/B,CAA9B;EACA;AACF;AACA;AACA;;EACE,OAAO;IACLe,QADK;IAELJ,QAFK;IAGLG,OAHK;IAILE,YAAY,EAAEL,QAAQ,GAAG,MAAH,GAAY,IAJ7B;IAKLM,SAAS,EAAErG,oBAAoB,CAACyF,MAAD,EAASS,OAAT,EAAkBf,QAAlB;EAL1B,CAAP;AAOD,CA3BD;AA4BA;AACA;AACA;AACA;;;AACA,MAAMmB,eAAe,GAAG,CAACnB,QAAD,WAAuC;EAAA,IAA5B;IAAEJ,QAAF;IAAYC;EAAZ,CAA4B;;EAC7D;EACA,IAAIH,cAAc,CAACM,QAAQ,CAACF,IAAV,EAAgBF,QAAhB,EAA0BC,QAA1B,CAAlB,EAAuD;IACrD,OAAO,IAAP;EACD,CAJ4D,CAK7D;EACA;;;EACA,IAAKD,QAAQ,IAAI9E,QAAQ,CAACkF,QAAD,EAAWJ,QAAX,CAArB,IAA+CC,QAAQ,IAAI9E,OAAO,CAACiF,QAAD,EAAWH,QAAX,CAAtE,EAA6F;IAC3F,OAAO,IAAP;EACD;;EACD,OAAO,KAAP;AACD,CAXD;AAYA;AACA;AACA;AACA;AACA;;;AACA,MAAMuB,mBAAmB,GAAG,CAACpB,QAAD,EAAWJ,QAAX,EAAqBC,QAArB,KAAkC;EAC5D,MAAMwB,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBtG,gBAAgB,CAAC+E,QAAD,CAAlC,CAAd,EAA6D;IAAEE,GAAG,EAAE;EAAP,CAA7D,CAAlB;EACA,OAAOiB,eAAe,CAACE,SAAD,EAAY;IAChCzB,QADgC;IAEhCC;EAFgC,CAAZ,CAAtB;AAID,CAND;AAOA;AACA;AACA;AACA;;;AACA,MAAM2B,mBAAmB,GAAG,CAACxB,QAAD,EAAWH,QAAX,KAAwB;EAClD,MAAM4B,SAAS,GAAGH,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrG,YAAY,CAAC8E,QAAD,CAA9B,CAAd,EAAyD;IAAEE,GAAG,EAAE;EAAP,CAAzD,CAAlB;EACA,OAAOiB,eAAe,CAACM,SAAD,EAAY;IAChC5B;EADgC,CAAZ,CAAtB;AAGD,CALD;;AAOA,MAAM6B,cAAc,GAAG,osVAAvB;AAEA,MAAMC,aAAa,GAAG,0mVAAtB;AAEA,MAAMC,QAAQ,GAAG,aAAc5I,kBAAkB,CAAC,cAAcC,WAAd,CAA0B;EAC1E4I,WAAW,GAAG;IAAA;;IACZ,OADY;IAAA;;IAEZ,KAAKC,cAAL;;IACA,KAAKC,cAAL;;IACA,KAAKC,SAAL,GAAiB9I,WAAW,CAAC,IAAD,EAAO,WAAP,EAAoB,CAApB,CAA5B;IACA,KAAK+I,SAAL,GAAiB/I,WAAW,CAAC,IAAD,EAAO,WAAP,EAAoB,CAApB,CAA5B;IACA,KAAKgJ,QAAL,GAAgBhJ,WAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;IACA,KAAKiJ,OAAL,GAAejJ,WAAW,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAlB,CAA1B;IACA,KAAKkJ,QAAL,GAAgBlJ,WAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;IACA,KAAKmJ,SAAL,GAAiBnJ,WAAW,CAAC,IAAD,EAAO,WAAP,EAAoB,CAApB,CAA5B;IACA,KAAKoJ,OAAL,GAAgB,UAASC,WAAW,EAAG,EAAvC;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IACI,KAAKC,oBAAL,GAA4B,KAA5B;IACA,KAAKhC,UAAL,GAAkBrF,SAAS,CAACE,QAAQ,EAAT,CAA3B;IACA,KAAKoH,gBAAL,GAAwB,IAAxB;IACA,KAAKC,gBAAL,GAAwB,KAAxB;IACA,KAAKnC,WAAL,GAAmB;MACjBoC,KAAK,EAAE,CADU;MAEjBzC,GAAG,EAAE,EAFY;MAGjBJ,IAAI,EAAE,IAHW;MAIjB8C,IAAI,EAAE,EAJW;MAKjBC,MAAM,EAAE,EALS;MAMjBC,IAAI,EAAE;IANW,CAAnB;IAQA,KAAKC,YAAL,GAAoB;MAClBJ,KAAK,EAAE,CADW;MAElBzC,GAAG,EAAE,EAFa;MAGlBJ,IAAI,EAAE,IAHY;MAIlB8C,IAAI,EAAE,EAJY;MAKlBC,MAAM,EAAE,EALU;MAMlBC,IAAI,EAAE;IANY,CAApB;IAQA,KAAKE,WAAL,GAAmB,KAAnB;IACA,KAAKC,iBAAL,GAAyB,KAAzB;IACA;AACJ;AACA;AACA;AACA;;IACI,KAAKC,KAAL,GAAa,SAAb;IACA;AACJ;AACA;;IACI,KAAKC,IAAL,GAAY,KAAKb,OAAjB;IACA;AACJ;AACA;;IACI,KAAKtB,QAAL,GAAgB,KAAhB;IACA;AACJ;AACA;;IACI,KAAKoC,QAAL,GAAgB,KAAhB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,KAAKC,YAAL,GAAoB,WAApB;IACA;AACJ;AACA;;IACI,KAAKC,UAAL,GAAkB,QAAlB;IACA;AACJ;AACA;;IACI,KAAKC,QAAL,GAAgB,MAAhB;IACA;AACJ;AACA;;IACI,KAAKC,SAAL,GAAiB,OAAjB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKlD,MAAL,GAAc,SAAd;IACA;AACJ;AACA;AACA;;IACI,KAAKmD,cAAL,GAAsB,CAAtB;IACA;AACJ;AACA;AACA;;IACI,KAAKC,QAAL,GAAgB,KAAhB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,KAAKC,gBAAL,GAAwB,KAAxB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IACI,KAAKC,kBAAL,GAA0B,KAA1B;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IACI,KAAKC,eAAL,GAAuB,KAAvB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IACI,KAAKC,oBAAL,GAA4B,IAA5B;IACA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAY,OAAZ;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACI,KAAKC,WAAL,GAAmB,KAAnB;;IACA,KAAKC,kBAAL,GAA0B,MAAM;MAC9B,MAAMC,cAAc,GAAG,KAAKC,EAAL,CAAQC,OAAR,CAAgB,wBAAhB,CAAvB;;MACA,IAAIF,cAAJ,EAAoB;QAClBA,cAAc,CAACG,OAAf;MACD;IACF,CALD;;IAMA,KAAKC,eAAL,GAAwBxD,KAAD,IAAW;MAChC,KAAKiC,YAAL,GAAoBzB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,CAApB;IACD,CAFD;;IAGA,KAAKyD,cAAL,GAAsB,UAACzD,KAAD,EAA+B;MAAA,IAAvB0D,UAAuB,uEAAV,KAAU;MACnD,MAAM;QAAEd,QAAF;QAAYe,gBAAZ;QAA8BjC;MAA9B,IAAuD,KAA7D;;MACA,IAAIkB,QAAJ,EAAc;QACZ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,MAAMjD,gBAAgB,GAAGC,KAAK,CAACC,OAAN,CAAc8D,gBAAd,IAAkCA,gBAAlC,GAAqD,CAACA,gBAAD,CAA9E;;QACA,IAAID,UAAJ,EAAgB;UACd,KAAI,CAACjE,WAAL,GAAmBE,gBAAgB,CAACiE,MAAjB,CAAyBnK,CAAD,IAAO,CAACS,SAAS,CAACT,CAAD,EAAIuG,KAAJ,CAAzC,CAAnB;QACD,CAFD,MAGK,IAAI0B,oBAAJ,EAA0B;UAC7B,KAAI,CAACjC,WAAL,GAAmB,CAAC,GAAGE,gBAAJ,EAAsBK,KAAtB,CAAnB;QACD,CAFI,MAGA;UACH;AACV;AACA;AACA;AACA;UACU,KAAI,CAACP,WAAL,GAAmB,CAACO,KAAD,CAAnB;QACD;MACF,CAzBD,MA0BK;QACH,KAAI,CAACP,WAAL,GAAmBe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,CAAnB;MACD;MACD;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;MACM,KAAI,CAAC0B,oBAAL,GAA4B,IAA5B;MACA,MAAMmC,iBAAiB,GAAG,KAAI,CAACR,EAAL,CAAQS,aAAR,CAAsB,kBAAtB,MAA8C,IAAxE;;MACA,IAAID,iBAAiB,IAAI,KAAI,CAACf,kBAA9B,EAAkD;QAChD;MACD;;MACD,KAAI,CAACiB,OAAL;IACD,CA/CD;IAgDA;AACJ;AACA;AACA;AACA;AACA;;;IACI,KAAKC,iBAAL,GAAyB,MAAM;MAC7B,IAAIC,EAAJ;;MACA,OAAO,KAAKC,eAAL,KAAyB,CAACD,EAAE,GAAG,KAAKZ,EAAL,CAAQc,UAAd,MAA8B,IAA9B,IAAsCF,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAACH,aAAH,CAAiB,gBAAjB,CAAxF,CAAP;IACD,CAHD;;IAIA,KAAKM,2BAAL,GAAmC,MAAM;MACvC,MAAMF,eAAe,GAAG,KAAKF,iBAAL,EAAxB;;MACA,IAAI,CAACE,eAAL,EAAsB;QACpB;MACD;;MACD,MAAMG,IAAI,GAAG,KAAKhB,EAAL,CAAQc,UAArB;MACA;AACN;AACA;AACA;;MACM,MAAMG,YAAY,GAAGJ,eAAe,CAACJ,aAAhB,CAA8B,gCAA9B,CAArB;MACA;AACN;AACA;AACA;AACA;AACA;;MACM,MAAMS,sBAAsB,GAAIC,EAAD,IAAQ;QACrC,IAAIP,EAAJ;;QACA,MAAMQ,MAAM,GAAGD,EAAE,CAAC,CAAD,CAAjB;QACA;AACR;AACA;AACA;AACA;AACA;;QACQ,IAAI,CAAC,CAACP,EAAE,GAAGQ,MAAM,CAACC,QAAb,MAA2B,IAA3B,IAAmCT,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAAC3E,QAAH,CAAY,aAAZ,CAA7D,KAA4F,CAAC4E,eAAe,CAACS,SAAhB,CAA0BC,QAA1B,CAAmC,aAAnC,CAAjG,EAAoJ;UAClJ;QACD;;QACD,KAAKC,eAAL,CAAqBP,YAArB;MACD,CAbD;;MAcA,MAAMQ,EAAE,GAAG,IAAIC,gBAAJ,CAAqBR,sBAArB,CAAX;MACAO,EAAE,CAACE,OAAH,CAAWd,eAAX,EAA4B;QAAEe,eAAe,EAAE,CAAC,OAAD,CAAnB;QAA8BC,iBAAiB,EAAE;MAAjD,CAA5B;;MACA,KAAKC,iBAAL,GAAyB,MAAM;QAC7BL,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAK,KAAK,CAA3B,GAA+B,KAAK,CAApC,GAAwCA,EAAE,CAACM,UAAH,EAAxC;MACD,CAFD;MAGA;AACN;AACA;AACA;;;MACMlB,eAAe,CAACmB,gBAAhB,CAAiC,SAAjC,EAA6Cb,EAAD,IAAQ;QAClD,MAAMc,aAAa,GAAGjB,IAAI,CAACiB,aAA3B;;QACA,IAAI,CAACA,aAAD,IAAkB,CAACA,aAAa,CAACX,SAAd,CAAwBC,QAAxB,CAAiC,cAAjC,CAAvB,EAAyE;UACvE;QACD;;QACD,MAAM5E,KAAK,GAAGxF,uBAAuB,CAAC8K,aAAD,CAArC;QACA,IAAIC,YAAJ;;QACA,QAAQf,EAAE,CAACgB,GAAX;UACE,KAAK,WAAL;YACEhB,EAAE,CAACiB,cAAH;YACAF,YAAY,GAAGpK,WAAW,CAAC6E,KAAD,CAA1B;YACA;;UACF,KAAK,SAAL;YACEwE,EAAE,CAACiB,cAAH;YACAF,YAAY,GAAGtK,eAAe,CAAC+E,KAAD,CAA9B;YACA;;UACF,KAAK,YAAL;YACEwE,EAAE,CAACiB,cAAH;YACAF,YAAY,GAAGxK,UAAU,CAACiF,KAAD,CAAzB;YACA;;UACF,KAAK,WAAL;YACEwE,EAAE,CAACiB,cAAH;YACAF,YAAY,GAAG1K,cAAc,CAACmF,KAAD,CAA7B;YACA;;UACF,KAAK,MAAL;YACEwE,EAAE,CAACiB,cAAH;YACAF,YAAY,GAAG5K,cAAc,CAACqF,KAAD,CAA7B;YACA;;UACF,KAAK,KAAL;YACEwE,EAAE,CAACiB,cAAH;YACAF,YAAY,GAAG9K,YAAY,CAACuF,KAAD,CAA3B;YACA;;UACF,KAAK,QAAL;YACEwE,EAAE,CAACiB,cAAH;YACAF,YAAY,GAAGf,EAAE,CAACkB,QAAH,GAAchI,eAAe,CAACsC,KAAD,CAA7B,GAAuC7F,gBAAgB,CAAC6F,KAAD,CAAtE;YACA;;UACF,KAAK,UAAL;YACEwE,EAAE,CAACiB,cAAH;YACAF,YAAY,GAAGf,EAAE,CAACkB,QAAH,GAAclI,WAAW,CAACwC,KAAD,CAAzB,GAAmC5F,YAAY,CAAC4F,KAAD,CAA9D;YACA;;UACF;AACV;AACA;AACA;AACA;AACA;;UACU;YACE;QAxCJ;QA0CA;AACR;AACA;AACA;;;QACQ,IAAIf,aAAa,CAACsG,YAAD,EAAe,KAAKzG,QAApB,EAA8B,KAAKC,QAAnC,CAAjB,EAA+D;UAC7D;QACD;;QACD,KAAKyE,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKwB,YAAvB,CAAd,EAAoDsD,YAApD,CAArB;QACA;AACR;AACA;AACA;;QACQI,qBAAqB,CAAC,MAAM,KAAKd,eAAL,CAAqBP,YAArB,CAAP,CAArB;MACD,CA9DD;IA+DD,CAvGD;;IAwGA,KAAKO,eAAL,GAAwBP,YAAD,IAAkB;MACvC;AACN;AACA;AACA;AACA;MACM,MAAMsB,OAAO,GAAGtB,YAAY,CAACuB,gBAAb,CAA8B,uBAA9B,CAAhB;MACA,MAAM;QAAEzG;MAAF,IAAU,KAAK6C,YAArB;;MACA,IAAI7C,GAAG,KAAK,IAAZ,EAAkB;QAChB;MACD;MACD;AACN;AACA;AACA;;;MACM,MAAM0G,KAAK,GAAGxB,YAAY,CAACR,aAAb,CAA4B,6BAA4B8B,OAAO,CAACG,MAAR,GAAiB3G,GAAI,GAA7E,CAAd;;MACA,IAAI0G,KAAJ,EAAW;QACTA,KAAK,CAACE,KAAN;MACD;IACF,CAnBD;;IAoBA,KAAKC,eAAL,GAAuB,MAAM;MAC3B,IAAI,KAAKC,GAAL,KAAa7G,SAAjB,EAA4B;QAC1B,KAAKP,QAAL,GAAgBO,SAAhB;QACA;MACD;;MACD,MAAM;QAAEwC,KAAF;QAASzC,GAAT;QAAcJ,IAAd;QAAoB8C,IAApB;QAA0BC;MAA1B,IAAqC1H,SAAS,CAAC,KAAK6L,GAAN,CAApD;MACA,KAAKpH,QAAL,GAAgB;QACd+C,KADc;QAEdzC,GAFc;QAGdJ,IAHc;QAId8C,IAJc;QAKdC;MALc,CAAhB;IAOD,CAbD;;IAcA,KAAKoE,eAAL,GAAuB,MAAM;MAC3B,IAAI,KAAKC,GAAL,KAAa/G,SAAjB,EAA4B;QAC1B,KAAKN,QAAL,GAAgBM,SAAhB;QACA;MACD;;MACD,MAAM;QAAEwC,KAAF;QAASzC,GAAT;QAAcJ,IAAd;QAAoB8C,IAApB;QAA0BC;MAA1B,IAAqC1H,SAAS,CAAC,KAAK+L,GAAN,CAApD;MACA,KAAKrH,QAAL,GAAgB;QACd8C,KADc;QAEdzC,GAFc;QAGdJ,IAHc;QAId8C,IAJc;QAKdC;MALc,CAAhB;IAOD,CAbD;;IAcA,KAAKsE,0BAAL,GAAkC,MAAM;MACtC,MAAMnC,eAAe,GAAG,KAAKF,iBAAL,EAAxB;;MACA,IAAI,CAACE,eAAL,EAAsB;QACpB;MACD;MACD;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;MACM,MAAMoC,MAAM,GAAGpC,eAAe,CAAC2B,gBAAhB,CAAiC,iBAAjC,CAAf;MACA,MAAMU,UAAU,GAAGD,MAAM,CAAC,CAAD,CAAzB;MACA,MAAME,YAAY,GAAGF,MAAM,CAAC,CAAD,CAA3B;MACA,MAAMG,QAAQ,GAAGH,MAAM,CAAC,CAAD,CAAvB;MACA,MAAMI,IAAI,GAAGxN,UAAU,CAAC,IAAD,CAAvB;MACA,MAAMyN,qBAAqB,GAAGD,IAAI,KAAK,KAAT,IAAkB,OAAOE,SAAP,KAAqB,WAAvC,IAAsDA,SAAS,CAACC,cAAV,GAA2B,CAA/G;MACA;AACN;AACA;AACA;AACA;AACA;;MACMxO,SAAS,CAAC,MAAM;QACd6L,eAAe,CAAC4C,UAAhB,GAA6BP,UAAU,CAACQ,WAAX,IAA0BlN,KAAK,CAAC,KAAKwJ,EAAN,CAAL,GAAiB,CAAC,CAAlB,GAAsB,CAAhD,CAA7B;;QACA,MAAM2D,eAAe,GAAIhH,KAAD,IAAW;UACjC,MAAMiH,GAAG,GAAG/C,eAAe,CAACgD,qBAAhB,EAAZ;UACA,MAAM7C,IAAI,GAAG,KAAKhB,EAAL,CAAQc,UAArB;UACA;AACV;AACA;AACA;;UACU,MAAMgD,eAAe,GAAG9C,IAAI,CAAC+C,gBAAL,CAAsBH,GAAG,CAAC9K,CAAJ,GAAQ8K,GAAG,CAACI,KAAJ,GAAY,CAA1C,EAA6CJ,GAAG,CAAC5K,CAAJ,GAAQ4K,GAAG,CAACK,MAAJ,GAAa,CAAlE,CAAxB;UACA;AACV;AACA;AACA;;UACU,IAAI,CAACH,eAAL,EACE;UACF,MAAMtF,KAAK,GAAGsF,eAAe,CAAC7D,OAAhB,CAAwB,iBAAxB,CAAd;UACA,IAAI,CAACzB,KAAL,EACE;UACF;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UACU,MAAM0F,QAAQ,GAAG1F,KAAK,CAACqF,qBAAN,EAAjB;UACA,IAAIM,IAAI,CAACC,GAAL,CAASF,QAAQ,CAACpL,CAAT,GAAa8K,GAAG,CAAC9K,CAA1B,IAA+B,CAAnC,EACE;UACF;AACV;AACA;AACA;AACA;AACA;;UACU,IAAI0F,KAAK,KAAK0E,UAAd,EAA0B;YACxB,OAAOpM,gBAAgB,CAAC6F,KAAD,CAAvB;UACD,CAFD,MAGK,IAAI6B,KAAK,KAAK4E,QAAd,EAAwB;YAC3B,OAAOrM,YAAY,CAAC4F,KAAD,CAAnB;UACD,CAFI,MAGA;YACH;UACD;QACF,CA7CD;;QA8CA,MAAM0H,iBAAiB,GAAG,MAAM;UAC9B,IAAIf,qBAAJ,EAA2B;YACzBzC,eAAe,CAACyD,KAAhB,CAAsBC,cAAtB,CAAqC,gBAArC;YACAC,uBAAuB,GAAG,KAA1B;UACD;UACD;AACV;AACA;AACA;;;UACU,MAAMC,OAAO,GAAGd,eAAe,CAAC,KAAK/E,YAAN,CAA/B;UACA,IAAI,CAAC6F,OAAL,EACE;UACF,MAAM;YAAEjG,KAAF;YAASzC,GAAT;YAAcJ;UAAd,IAAuB8I,OAA7B;;UACA,IAAIzH,eAAe,CAAC;YAAEwB,KAAF;YAAS7C,IAAT;YAAeI,GAAG,EAAE;UAApB,CAAD,EAA6B;YAC9CN,QAAQ,EAAE0B,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK3B,QAAvB,CAAd,EAAgD;cAAEM,GAAG,EAAE;YAAP,CAAhD,CADoC;YAE9CL,QAAQ,EAAEyB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK1B,QAAvB,CAAd,EAAgD;cAAEK,GAAG,EAAE;YAAP,CAAhD;UAFoC,CAA7B,CAAnB,EAGI;YACF;UACD;UACD;AACV;AACA;AACA;AACA;;;UACU8E,eAAe,CAACyD,KAAhB,CAAsBI,WAAtB,CAAkC,UAAlC,EAA8C,QAA9C;UACA;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UACU1P,SAAS,CAAC,MAAM;YACd,KAAKmL,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKwB,YAAvB,CAAd,EAAoD;cAAEJ,KAAF;cAASzC,GAAG,EAAEA,GAAd;cAAmBJ;YAAnB,CAApD,CAArB;YACAkF,eAAe,CAAC4C,UAAhB,GAA6BN,YAAY,CAACO,WAAb,IAA4BlN,KAAK,CAAC,KAAKwJ,EAAN,CAAL,GAAiB,CAAC,CAAlB,GAAsB,CAAlD,CAA7B;YACAa,eAAe,CAACyD,KAAhB,CAAsBC,cAAtB,CAAqC,UAArC;UACD,CAJQ,CAAT;QAKD,CAvCD;QAwCA;AACR;AACA;AACA;;;QACQ,IAAII,aAAJ;QACA;AACR;AACA;AACA;AACA;;QACQ,IAAIH,uBAAuB,GAAG,KAA9B;;QACA,MAAMI,cAAc,GAAG,MAAM;UAC3B,IAAID,aAAJ,EAAmB;YACjBE,YAAY,CAACF,aAAD,CAAZ;UACD;UACD;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACU,IAAI,CAACH,uBAAD,IAA4BlB,qBAAhC,EAAuD;YACrDzC,eAAe,CAACyD,KAAhB,CAAsBI,WAAtB,CAAkC,gBAAlC,EAAoD,MAApD;YACAF,uBAAuB,GAAG,IAA1B;UACD,CAhB0B,CAiB3B;;;UACAG,aAAa,GAAGG,UAAU,CAACT,iBAAD,EAAoB,EAApB,CAA1B;QACD,CAnBD;;QAoBAxD,eAAe,CAACmB,gBAAhB,CAAiC,QAAjC,EAA2C4C,cAA3C;;QACA,KAAKG,uBAAL,GAA+B,MAAM;UACnClE,eAAe,CAACmE,mBAAhB,CAAoC,QAApC,EAA8CJ,cAA9C;QACD,CAFD;MAGD,CA3HQ,CAAT;IA4HD,CA5JD;IA6JA;AACJ;AACA;AACA;AACA;;;IACI,KAAKK,2BAAL,GAAmC,MAAM;MACvC,MAAM;QAAEF,uBAAF;QAA2BjD;MAA3B,IAAiD,IAAvD;;MACA,IAAIiD,uBAAuB,KAAK/I,SAAhC,EAA2C;QACzC+I,uBAAuB;MACxB;;MACD,IAAIjD,iBAAiB,KAAK9F,SAA1B,EAAqC;QACnC8F,iBAAiB;MAClB;IACF,CARD;;IASA,KAAKoD,YAAL,GAAqBC,KAAD,IAAW;MAC7B,KAAK9G,oBAAL,GAA4B,CAAC,CAAC8G,KAA9B;MACA,IAAIC,cAAc,GAAGpO,SAAS,CAACmO,KAAK,IAAIjO,QAAQ,EAAlB,CAA9B;MACA,MAAM;QAAEuE,QAAF;QAAYC,QAAZ;QAAsB6D;MAAtB,IAAmC,IAAzC;;MACA,IAAI,CAACA,QAAD,IAAahD,KAAK,CAACC,OAAN,CAAc2I,KAAd,CAAjB,EAAuC;QACrC,KAAKA,KAAL,GAAaA,KAAK,CAAC,CAAD,CAAlB;QACAC,cAAc,GAAGA,cAAc,CAAC,CAAD,CAA/B;MACD;;MACDpN,sBAAsB,CAACoN,cAAD,EAAiB3J,QAAjB,EAA2BC,QAA3B,CAAtB;MACA;AACN;AACA;AACA;AACA;;MACM,MAAM2J,WAAW,GAAG9I,KAAK,CAACC,OAAN,CAAc4I,cAAd,IAAgCA,cAAc,CAAC,CAAD,CAA9C,GAAoDA,cAAxE;MACA,MAAM;QAAE5G,KAAF;QAASzC,GAAT;QAAcJ,IAAd;QAAoB8C,IAApB;QAA0BC,MAA1B;QAAkC4G;MAAlC,IAA+C/K,SAAS,CAAC8K,WAAD,EAAc5J,QAAd,EAAwBC,QAAxB,CAA9D;MACA,MAAMiD,IAAI,GAAGlE,SAAS,CAACgE,IAAD,CAAtB;MACA,KAAK0B,eAAL,CAAqB;QACnB3B,KADmB;QAEnBzC,GAFmB;QAGnBJ,IAHmB;QAInB8C,IAJmB;QAKnBC,MALmB;QAMnB4G,QANmB;QAOnB3G;MAPmB,CAArB;;MASA,IAAIpC,KAAK,CAACC,OAAN,CAAc4I,cAAd,CAAJ,EAAmC;QACjC,KAAKhJ,WAAL,GAAmB,CAAC,GAAGgJ,cAAJ,CAAnB;MACD,CAFD,MAGK;QACH,KAAKhJ,WAAL,GAAmB;UACjBoC,KADiB;UAEjBzC,GAFiB;UAGjBJ,IAHiB;UAIjB8C,IAJiB;UAKjBC,MALiB;UAMjB4G,QANiB;UAOjB3G;QAPiB,CAAnB;MASD;IACF,CAxCD;;IAyCA,KAAK4G,OAAL,GAAe,MAAM;MACnB,KAAKxH,QAAL,CAAcyH,IAAd;IACD,CAFD;;IAGA,KAAKC,MAAL,GAAc,MAAM;MAClB,KAAKzH,OAAL,CAAawH,IAAb;IACD,CAFD;;IAGA,KAAKE,QAAL,GAAgB,MAAM;MACpB,OAAO,KAAKP,KAAL,IAAc,IAAd,IAAsB,KAAKA,KAAL,KAAe,EAA5C;IACD,CAFD;;IAGA,KAAK7H,SAAL,GAAiB,MAAM;MACrB,MAAMuD,eAAe,GAAG,KAAKF,iBAAL,EAAxB;;MACA,IAAI,CAACE,eAAL,EAAsB;QACpB;MACD;;MACD,MAAMvD,SAAS,GAAGuD,eAAe,CAACJ,aAAhB,CAA8B,8BAA9B,CAAlB;;MACA,IAAI,CAACnD,SAAL,EAAgB;QACd;MACD;;MACD,MAAMqI,IAAI,GAAGrI,SAAS,CAACsI,WAAV,GAAwB,CAArC;MACA/E,eAAe,CAACgF,QAAhB,CAAyB;QACvBC,GAAG,EAAE,CADkB;QAEvBH,IAAI,EAAEA,IAAI,IAAInP,KAAK,CAAC,KAAKwJ,EAAN,CAAL,GAAiB,CAAC,CAAlB,GAAsB,CAA1B,CAFa;QAGvB+F,QAAQ,EAAE;MAHa,CAAzB;IAKD,CAfD;;IAgBA,KAAK7I,SAAL,GAAiB,MAAM;MACrB,MAAM2D,eAAe,GAAG,KAAKF,iBAAL,EAAxB;;MACA,IAAI,CAACE,eAAL,EAAsB;QACpB;MACD;;MACD,MAAM3D,SAAS,GAAG2D,eAAe,CAACJ,aAAhB,CAA8B,+BAA9B,CAAlB;;MACA,IAAI,CAACvD,SAAL,EAAgB;QACd;MACD;;MACD2D,eAAe,CAACgF,QAAhB,CAAyB;QACvBC,GAAG,EAAE,CADkB;QAEvBH,IAAI,EAAE,CAFiB;QAGvBI,QAAQ,EAAE;MAHa,CAAzB;IAKD,CAdD;;IAeA,KAAKC,sBAAL,GAA8B,MAAM;MAClC,KAAKzH,gBAAL,GAAwB,CAAC,KAAKA,gBAA9B;IACD,CAFD;EAGD;;EACD0H,eAAe,GAAG;IAChB,KAAKC,SAAL;EACD;;EACDC,UAAU,GAAG;IACX,KAAKvD,eAAL;EACD;;EACDwD,UAAU,GAAG;IACX,KAAKtD,eAAL;EACD;;EACDuD,iBAAiB,GAAG;IAClB,KAAKC,gBAAL,GAAwBpO,uBAAuB,CAAC,KAAKqO,UAAN,CAA/C;EACD;;EACDC,kBAAkB,GAAG;IACnB,KAAKC,iBAAL,GAAyBvO,uBAAuB,CAAC,KAAKwO,WAAN,CAAhD;EACD;;EACDC,gBAAgB,GAAG;IACjB,KAAKC,eAAL,GAAuB1O,uBAAuB,CAAC,KAAK4D,SAAN,CAA9C;EACD;;EACD+K,iBAAiB,GAAG;IAClB,KAAKC,gBAAL,GAAwB5O,uBAAuB,CAAC,KAAK6O,UAAN,CAA/C;EACD;;EACDC,mBAAmB,GAAG;IACpB,KAAKC,kBAAL,GAA0B/O,uBAAuB,CAAC,KAAKgP,YAAN,CAAjD;EACD;;EACDC,kBAAkB,GAAG;IACnB,KAAK7G,gBAAL,GAAwB,KAAKlE,WAA7B;EACD;EACD;AACF;AACA;;;EACEgL,YAAY,GAAG;IACb,MAAM;MAAEjC,KAAF;MAAS1J,QAAT;MAAmBC,QAAnB;MAA6BkD,YAA7B;MAA2CW;IAA3C,IAAwD,IAA9D;;IACA,IAAI,KAAKmG,QAAL,EAAJ,EAAqB;MACnB,IAAI,CAACnG,QAAD,IAAahD,KAAK,CAACC,OAAN,CAAc2I,KAAd,CAAjB,EAAuC;QACrC,KAAKA,KAAL,GAAaA,KAAK,CAAC,CAAD,CAAlB;QACA,OAFqC,CAE7B;MACT;MACD;AACN;AACA;AACA;AACA;AACA;AACA;;;MACM,MAAMkC,cAAc,GAAGrQ,SAAS,CAACmO,KAAD,CAAhC;;MACA,IAAIkC,cAAJ,EAAoB;QAClBrP,sBAAsB,CAACqP,cAAD,EAAiB5L,QAAjB,EAA2BC,QAA3B,CAAtB;;QACA,IAAIa,KAAK,CAACC,OAAN,CAAc6K,cAAd,CAAJ,EAAmC;UACjC,KAAK/G,gBAAL,GAAwB,CAAC,GAAG+G,cAAJ,CAAxB;QACD,CAFD,MAGK;UACH,MAAM;YAAE7I,KAAF;YAASzC,GAAT;YAAcJ,IAAd;YAAoB8C,IAApB;YAA0BC;UAA1B,IAAqC2I,cAA3C;UACA,MAAM1I,IAAI,GAAGF,IAAI,IAAI,IAAR,GAAgBA,IAAI,IAAI,EAAR,GAAa,IAAb,GAAoB,IAApC,GAA4CzC,SAAzD;UACA,KAAKsE,gBAAL,GAAwBnD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKhB,WAAvB,CAAd,EAAmD;YAAEoC,KAAF;YACzEzC,GADyE;YAEzEJ,IAFyE;YAGzE8C,IAHyE;YAIzEC,MAJyE;YAKzEC;UALyE,CAAnD,CAAxB;UAMA;AACV;AACA;AACA;AACA;AACA;AACA;;UACU,KAAKwB,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwB,YAAlB,CAAd,EAA+C;YAAED;UAAF,CAA/C,CAArB;QACD;MACF,CAvBD,MAwBK;QACHtI,eAAe,CAAE,gCAA+B8O,KAAM,oDAAvC,CAAf;MACD;IACF;;IACD,KAAKe,SAAL;IACA,KAAKpI,SAAL,CAAe0H,IAAf,CAAoB;MAAEL;IAAF,CAApB;EACD;EACD;AACF;AACA;AACA;AACA;;;EACe,MAAPzE,OAAO,GAAuB;IAAA,IAAtB4G,YAAsB,uEAAP,KAAO;IAClC,MAAM;MAAEjJ,oBAAF;MAAwBkJ,gBAAxB;MAA0CnL;IAA1C,IAA0D,IAAhE;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,IAAIiC,oBAAoB,IAAI,CAACkJ,gBAA7B,EAA+C;MAC7C,MAAMC,kBAAkB,GAAGjL,KAAK,CAACC,OAAN,CAAcJ,WAAd,CAA3B;;MACA,IAAIoL,kBAAkB,IAAIpL,WAAW,CAACsG,MAAZ,KAAuB,CAAjD,EAAoD;QAClD,KAAKyC,KAAL,GAAanJ,SAAb;MACD,CAFD,MAGK;QACH;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,IAAIwL,kBAAJ,EAAwB;UACtB,MAAMC,KAAK,GAAGrP,gBAAgB,CAACgE,WAAD,CAAhB,CAA8BsL,GAA9B,CAAmCC,GAAD,IAAS,IAAIC,IAAJ,CAASD,GAAT,CAA3C,CAAd;;UACA,KAAK,IAAIpR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkR,KAAK,CAAC/E,MAA1B,EAAkCnM,CAAC,EAAnC,EAAuC;YACrC6F,WAAW,CAAC7F,CAAD,CAAX,CAAe+O,QAAf,GAA0BmC,KAAK,CAAClR,CAAD,CAAL,CAASsR,iBAAT,KAA+B,CAAC,CAA1D;UACD;QACF,CALD,MAMK;UACH,MAAMC,IAAI,GAAG,IAAIF,IAAJ,CAASxP,gBAAgB,CAACgE,WAAD,CAAzB,CAAb;UACAA,WAAW,CAACkJ,QAAZ,GAAuBwC,IAAI,CAACD,iBAAL,KAA2B,CAAC,CAAnD;QACD;;QACD,KAAK1C,KAAL,GAAa/M,gBAAgB,CAACgE,WAAD,CAA7B;MACD;IACF;;IACD,IAAIkL,YAAJ,EAAkB;MAChB,KAAKxH,kBAAL;IACD;EACF;EACD;AACF;AACA;AACA;AACA;;;EACa,MAALiI,KAAK,CAACC,SAAD,EAAY;IACrB,KAAK9C,YAAL,CAAkB8C,SAAlB;EACD;EACD;AACF;AACA;AACA;AACA;AACA;;;EACc,MAANC,MAAM,GAAuB;IAAA,IAAtBX,YAAsB,uEAAP,KAAO;IACjC,KAAKzJ,SAAL,CAAe2H,IAAf;;IACA,IAAI8B,YAAJ,EAAkB;MAChB,KAAKxH,kBAAL;IACD;EACF;;EACmB,IAAhByH,gBAAgB,GAAG;IACrB,MAAM;MAAErI;IAAF,IAAmB,IAAzB;IACA,OAAOA,YAAY,KAAK,MAAjB,IAA2BA,YAAY,KAAK,WAA5C,IAA2DA,YAAY,KAAK,WAAnF;EACD;;EACDgJ,iBAAiB,GAAG;IAClB,KAAKC,iBAAL,GAAyBrS,iBAAiB,CAAC,KAAKkK,EAAN,CAAjB,CAA2BoI,OAApD;EACD;;EACDC,oBAAoB,GAAG;IACrB,IAAI,KAAKF,iBAAT,EAA4B;MAC1B,KAAKA,iBAAL;MACA,KAAKA,iBAAL,GAAyBnM,SAAzB;IACD;EACF;;EACDsM,mBAAmB,GAAG;IACpB,KAAKtF,0BAAL;IACA,KAAKjC,2BAAL;EACD;;EACDwH,gBAAgB,GAAG;IACjB;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,MAAMC,eAAe,GAAIC,OAAD,IAAa;MACnC,MAAMtH,EAAE,GAAGsH,OAAO,CAAC,CAAD,CAAlB;;MACA,IAAI,CAACtH,EAAE,CAACuH,cAAR,EAAwB;QACtB;MACD;;MACD,KAAKJ,mBAAL;MACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;MACMtT,SAAS,CAAC,MAAM;QACd,KAAKgL,EAAL,CAAQsB,SAAR,CAAkBqH,GAAlB,CAAsB,gBAAtB;MACD,CAFQ,CAAT;IAGD,CAjBD;;IAkBA,MAAMC,SAAS,GAAG,IAAIC,oBAAJ,CAAyBL,eAAzB,EAA0C;MAAEM,SAAS,EAAE;IAAb,CAA1C,CAAlB;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI9S,GAAG,CAAC,MAAM4S,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACjH,OAAV,CAAkB,KAAK3B,EAAvB,CAA7D,CAAH;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;;IACI,MAAM+I,cAAc,GAAIN,OAAD,IAAa;MAClC,MAAMtH,EAAE,GAAGsH,OAAO,CAAC,CAAD,CAAlB;;MACA,IAAItH,EAAE,CAACuH,cAAP,EAAuB;QACrB;MACD;;MACD,KAAKzD,2BAAL;MACA;AACN;AACA;AACA;AACA;AACA;AACA;;MACM,KAAK1G,gBAAL,GAAwB,KAAxB;MACAvJ,SAAS,CAAC,MAAM;QACd,KAAKgL,EAAL,CAAQsB,SAAR,CAAkB0H,MAAlB,CAAyB,gBAAzB;MACD,CAFQ,CAAT;IAGD,CAjBD;;IAkBA,MAAMC,QAAQ,GAAG,IAAIJ,oBAAJ,CAAyBE,cAAzB,EAAyC;MAAED,SAAS,EAAE;IAAb,CAAzC,CAAjB;IACA9S,GAAG,CAAC,MAAMiT,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACtH,OAAT,CAAiB,KAAK3B,EAAtB,CAA3D,CAAH;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACI,MAAMgB,IAAI,GAAG7K,cAAc,CAAC,KAAK6J,EAAN,CAA3B;IACAgB,IAAI,CAACgB,gBAAL,CAAsB,UAAtB,EAAmCb,EAAD,IAAQA,EAAE,CAAC+H,eAAH,EAA1C;IACAlI,IAAI,CAACgB,gBAAL,CAAsB,SAAtB,EAAkCb,EAAD,IAAQA,EAAE,CAAC+H,eAAH,EAAzC;EACD;EACD;AACF;AACA;AACA;;;EACEC,kBAAkB,GAAG;IACnB,MAAM;MAAEjK,YAAF;MAAgBZ;IAAhB,IAAqC,IAA3C;;IACA,IAAIA,gBAAgB,KAAK,IAAzB,EAA+B;MAC7B,KAAKA,gBAAL,GAAwBY,YAAxB;MACA;IACD;;IACD,IAAIA,YAAY,KAAKZ,gBAArB,EAAuC;MACrC;IACD;;IACD,KAAKA,gBAAL,GAAwBY,YAAxB;IACA,KAAK+F,2BAAL;IACA,KAAKqD,mBAAL;IACA;AACJ;AACA;AACA;AACA;;IACI,KAAK/J,gBAAL,GAAwB,KAAxB;IACAvI,GAAG,CAAC,MAAM;MACR,KAAKkI,SAAL,CAAesH,IAAf;IACD,CAFE,CAAH;EAGD;;EACD4D,iBAAiB,GAAG;IAClB,MAAM;MAAEpJ,EAAF;MAAMT,QAAN;MAAgBL,YAAhB;MAA8BW;IAA9B,IAA8C,IAApD;;IACA,IAAIN,QAAJ,EAAc;MACZ,IAAIL,YAAY,KAAK,MAArB,EAA6B;QAC3B7I,eAAe,CAAC,oEAAD,EAAuE2J,EAAvE,CAAf;MACD;;MACD,IAAIH,WAAJ,EAAiB;QACfxJ,eAAe,CAAC,mEAAD,EAAsE2J,EAAtE,CAAf;MACD;IACF;;IACD,KAAK4C,eAAL;IACA,KAAKE,eAAL;IACA,KAAKoC,YAAL,CAAkB,KAAKC,KAAvB;IACA,KAAK2B,gBAAL,GAAwB5O,uBAAuB,CAAC,KAAK6O,UAAN,CAA/C;IACA,KAAKE,kBAAL,GAA0B/O,uBAAuB,CAAC,KAAKgP,YAAN,CAAjD;IACA,KAAKT,iBAAL,GAAyBvO,uBAAuB,CAAC,KAAKwO,WAAN,CAAhD;IACA,KAAKJ,gBAAL,GAAwBpO,uBAAuB,CAAC,KAAKqO,UAAN,CAA/C;IACA,KAAKK,eAAL,GAAuB1O,uBAAuB,CAAC,KAAK4D,SAAN,CAA9C;IACA,KAAKoK,SAAL;EACD;;EACDA,SAAS,GAAG;IACV,KAAKjI,QAAL,CAAcuH,IAAd,CAAmB;MACjB6D,WAAW,EAAE,IADI;MAEjBC,QAAQ,EAAE,IAFO;MAGjB,wBAAwB,KAAKzM;IAHZ,CAAnB;EAKD;EACD;AACF;AACA;AACA;AACA;;;EACE0M,YAAY,GAAG;IACb,MAAM;MAAE9J,kBAAF;MAAsBC;IAAtB,IAA0C,IAAhD;IACA,MAAMc,iBAAiB,GAAG,KAAKR,EAAL,CAAQS,aAAR,CAAsB,kBAAtB,MAA8C,IAAxE;;IACA,IAAI,CAACD,iBAAD,IAAsB,CAACf,kBAAvB,IAA6C,CAACC,eAAlD,EAAmE;MACjE;IACD;;IACD,MAAM8J,gBAAgB,GAAG,MAAM;MAC7B,KAAKzB,KAAL;MACA,KAAK5C,KAAL,GAAanJ,SAAb;IACD,CAHD;IAIA;AACJ;AACA;AACA;AACA;AACA;AACA;;;IACI,OAAQ/G,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAAsCxU,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAAuCxU,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;QACrG,CAAC,yBAAD,GAA6B,IADwE;QAErG,CAAC,kBAAD,GAAsB,KAAK/J;MAF0E;IAAT,CAAR,EAGjFzK,CAAC,CAAC,MAAD,EAAS;MAAE+J,IAAI,EAAE;IAAR,CAAT,EAA8B/J,CAAC,CAAC,aAAD,EAAgB,IAAhB,EAAsBwK,kBAAkB,IAAKxK,CAAC,CAAC,YAAD,EAAe;MAAEyU,EAAE,EAAE,eAAN;MAAuB3K,KAAK,EAAE,KAAKA,KAAnC;MAA0C4K,OAAO,EAAE,MAAM,KAAK1B,MAAL,CAAY,IAAZ;IAAzD,CAAf,EAA6F,KAAK9I,UAAlG,CAA9C,EAA8JlK,CAAC,CAAC,KAAD,EAAQ,IAAR,EAAcyK,eAAe,IAAKzK,CAAC,CAAC,YAAD,EAAe;MAAEyU,EAAE,EAAE,cAAN;MAAsB3K,KAAK,EAAE,KAAKA,KAAlC;MAAyC4K,OAAO,EAAE,MAAMH,gBAAgB;IAAxE,CAAf,EAA6F,KAAKnK,SAAlG,CAAnC,EAAkJI,kBAAkB,IAAKxK,CAAC,CAAC,YAAD,EAAe;MAAEyU,EAAE,EAAE,gBAAN;MAAwB3K,KAAK,EAAE,KAAKA,KAApC;MAA2C4K,OAAO,EAAE,MAAM,KAAKjJ,OAAL,CAAa,IAAb;IAA1D,CAAf,EAA+F,KAAKtB,QAApG,CAA1K,CAA/J,CAA/B,CAHgF,CAAxC,CAAvC,CAAT;EAID;EACD;AACF;AACA;;;EACEwK,iBAAiB,GAAwC;IAAA,IAAvCC,iBAAuC,uEAAnB,KAAK3K,YAAc;;IACvD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,MAAM4K,WAAW,GAAGD,iBAAiB,KAAK,WAAtB,GAChB,CAAC,KAAKE,uBAAL,CAA6BF,iBAA7B,CAAD,EAAkD,KAAKG,uBAAL,CAA6BH,iBAA7B,CAAlD,CADgB,GAEhB,CAAC,KAAKG,uBAAL,CAA6BH,iBAA7B,CAAD,EAAkD,KAAKE,uBAAL,CAA6BF,iBAA7B,CAAlD,CAFJ;IAGA,OAAO5U,CAAC,CAAC,qBAAD,EAAwB,IAAxB,EAA8B6U,WAA9B,CAAR;EACD;;EACDE,uBAAuB,CAACH,iBAAD,EAAoB;IACzC,OAAOA,iBAAiB,KAAK,WAAtB,IAAqCA,iBAAiB,KAAK,WAA3D,GACH,KAAKI,8BAAL,EADG,GAEH,KAAKC,iCAAL,CAAuCL,iBAAvC,CAFJ;EAGD;;EACDI,8BAA8B,GAAG;IAC/B,MAAM;MAAE7N,WAAF;MAAewC,YAAf;MAA6BzC,MAA7B;MAAqCV,QAArC;MAA+CC,QAA/C;MAAyDW,UAAzD;MAAqE8N;IAArE,IAAuF,IAA7F;IACA;AACJ;AACA;AACA;;IACI,MAAMC,cAAc,GAAG3Q,cAAc,CAACmF,YAAD,CAArC;IACA;AACJ;AACA;AACA;AACA;;IACI,KAAK,IAAIrI,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI6T,cAAc,CAAC1H,MAAf,GAAwB,CAA7C,EAAgDnM,CAAC,EAAjD,EAAqD;MACnD6T,cAAc,CAAC7T,CAAD,CAAd,CAAkBwF,GAAlB,GAAwB,IAAxB;IACD;IACD;AACJ;AACA;AACA;AACA;;;IACI,MAAM8G,GAAG,GAAGpH,QAAQ,IAAI2O,cAAc,CAAC,CAAD,CAAtC;IACA,MAAMrH,GAAG,GAAGrH,QAAQ,IAAI0O,cAAc,CAACA,cAAc,CAAC1H,MAAf,GAAwB,CAAzB,CAAtC;IACA,MAAM2H,MAAM,GAAGhS,yBAAyB,CAAC8D,MAAD,EAASyC,YAAT,EAAuBvC,UAAvB,EAAmCwG,GAAnC,EAAwCE,GAAxC,EAA6C,KAAK6D,eAAlD,EAAmE,KAAKH,iBAAxE,CAAxC;IACA,IAAI6D,KAAK,GAAGD,MAAM,CAACC,KAAnB;IACA,MAAM3N,KAAK,GAAG0N,MAAM,CAAC1N,KAArB;;IACA,IAAIwN,aAAJ,EAAmB;MACjBG,KAAK,GAAGA,KAAK,CAAC5C,GAAN,CAAU,CAAC6C,UAAD,EAAaC,KAAb,KAAuB;QACvC,MAAMC,cAAc,GAAG9N,KAAK,CAAC6N,KAAD,CAA5B;QACA,IAAI3N,QAAJ;;QACA,IAAI;UACF;AACV;AACA;AACA;AACA;UACUA,QAAQ,GAAG,CAACsN,aAAa,CAAC/R,gBAAgB,CAACqS,cAAD,CAAjB,CAAzB;QACD,CAPD,CAQA,OAAOxT,CAAP,EAAU;UACRX,aAAa,CAAC,oGAAD,EAAuGW,CAAvG,CAAb;QACD;;QACD,OAAOkG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBmN,UAAlB,CAAd,EAA6C;UAAE1N;QAAF,CAA7C,CAAP;MACD,CAfO,CAAR;IAgBD;IACD;AACJ;AACA;AACA;;;IACI,MAAM6N,WAAW,GAAG9L,YAAY,CAAC7C,GAAb,GACf,GAAE6C,YAAY,CAACjD,IAAK,IAAGiD,YAAY,CAACJ,KAAM,IAAGI,YAAY,CAAC7C,GAAI,EAD/C,GAEf,GAAEM,UAAU,CAACV,IAAK,IAAGU,UAAU,CAACmC,KAAM,IAAGnC,UAAU,CAACN,GAAI,EAF7D;IAGA,OAAQ9G,CAAC,CAAC,4BAAD,EAA+B;MAAEwU,KAAK,EAAE,aAAT;MAAwB1K,KAAK,EAAE,KAAKA,KAApC;MAA2CuL,KAAK,EAAEA,KAAlD;MAAyDnF,KAAK,EAAEuF,WAAhE;MAA6EC,WAAW,EAAGxJ,EAAD,IAAQ;QACtI;QACA;QACA;QACA;QACA,IAAI,KAAK4D,uBAAT,EAAkC;UAChC,KAAKA,uBAAL;QACD;;QACD,MAAM;UAAEI;QAAF,IAAYhE,EAAE,CAACyJ,MAArB;QACA,MAAMC,QAAQ,GAAGlO,KAAK,CAACD,IAAN,CAAW;UAAA,IAAC;YAAE8B,KAAF;YAASzC,GAAT;YAAcJ;UAAd,CAAD;UAAA,OAA0BwJ,KAAK,KAAM,GAAExJ,IAAK,IAAG6C,KAAM,IAAGzC,GAAI,EAA5D;QAAA,CAAX,CAAjB;QACA,KAAKoE,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwB,YAAlB,CAAd,EAA+CiM,QAA/C,CAArB;;QACA,IAAI,CAACtO,KAAK,CAACC,OAAN,CAAcJ,WAAd,CAAL,EAAiC;UAC/B,KAAKgE,cAAL,CAAoBjD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,WAAlB,CAAd,EAA8CyO,QAA9C,CAApB;QACD,CAbqI,CActI;QACA;;;QACA,KAAK7H,0BAAL;QACA7B,EAAE,CAAC+H,eAAH;MACD;IAlBqC,CAA/B,CAAT;EAmBD;;EACDgB,iCAAiC,CAACL,iBAAD,EAAoB;IACnD,MAAM;MAAEjL,YAAF;MAAgBuL;IAAhB,IAAkC,IAAxC;IACA,MAAMW,kBAAkB,GAAGjB,iBAAiB,KAAK,MAAtB,IAAgCA,iBAAiB,KAAK,MAAjF;IACA,MAAM5G,MAAM,GAAG6H,kBAAkB,GAC7BvS,kBAAkB,CAAC,KAAK4D,MAAN,EAAcyC,YAAd,EAA4B,KAAKnD,QAAjC,EAA2C,KAAKC,QAAhD,EAA0D,KAAK+K,iBAA/D,CADW,GAE7B,EAFJ;IAGA,MAAMsE,gBAAgB,GAAGlB,iBAAiB,KAAK,MAA/C;IACA,IAAImB,IAAI,GAAGD,gBAAgB,GACvBtS,gBAAgB,CAAC,KAAK0D,MAAN,EAAcyC,YAAd,EAA4B,KAAKnD,QAAjC,EAA2C,KAAKC,QAAhD,EAA0D,KAAKkL,eAA/D,CADO,GAEvB,EAFJ;;IAGA,IAAIuD,aAAJ,EAAmB;MACjBa,IAAI,GAAGA,IAAI,CAACtD,GAAL,CAAUuD,SAAD,IAAe;QAC7B,MAAM;UAAE9F;QAAF,IAAY8F,SAAlB;QACA,MAAMC,QAAQ,GAAG,OAAO/F,KAAP,KAAiB,QAAjB,GAA4BgG,QAAQ,CAAChG,KAAD,CAApC,GAA8CA,KAA/D;QACA,MAAMsF,cAAc,GAAG;UACrBjM,KAAK,EAAEI,YAAY,CAACJ,KADC;UAErBzC,GAAG,EAAEmP,QAFgB;UAGrBvP,IAAI,EAAEiD,YAAY,CAACjD;QAHE,CAAvB;QAKA,IAAIkB,QAAJ;;QACA,IAAI;UACF;AACV;AACA;AACA;AACA;UACUA,QAAQ,GAAG,CAACsN,aAAa,CAAC/R,gBAAgB,CAACqS,cAAD,CAAjB,CAAzB;QACD,CAPD,CAQA,OAAOxT,CAAP,EAAU;UACRX,aAAa,CAAC,oGAAD,EAAuGW,CAAvG,CAAb;QACD;;QACD,OAAOkG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB6N,SAAlB,CAAd,EAA4C;UAAEpO;QAAF,CAA5C,CAAP;MACD,CArBM,CAAP;IAsBD;;IACD,MAAMuO,iBAAiB,GAAGvB,iBAAiB,KAAK,OAAtB,IAAiCA,iBAAiB,KAAK,MAAjF;IACA,MAAMwB,KAAK,GAAGD,iBAAiB,GAC3BzS,iBAAiB,CAAC,KAAK0D,UAAN,EAAkB,KAAKZ,QAAvB,EAAiC,KAAKC,QAAtC,EAAgD,KAAK4K,gBAArD,CADU,GAE3B,EAFJ;IAGA;AACJ;AACA;;IACI,MAAMgF,cAAc,GAAGzS,kBAAkB,CAAC,KAAKsD,MAAN,EAAc;MAAEqC,KAAK,EAAE,SAAT;MAAoBzC,GAAG,EAAE;IAAzB,CAAd,CAAzC;IACA,IAAI+N,WAAW,GAAG,EAAlB;;IACA,IAAIwB,cAAJ,EAAoB;MAClBxB,WAAW,GAAG,CACZ,KAAKyB,uBAAL,CAA6BtI,MAA7B,CADY,EAEZ,KAAKuI,qBAAL,CAA2BR,IAA3B,CAFY,EAGZ,KAAKS,sBAAL,CAA4BJ,KAA5B,CAHY,CAAd;IAKD,CAND,MAOK;MACHvB,WAAW,GAAG,CACZ,KAAK0B,qBAAL,CAA2BR,IAA3B,CADY,EAEZ,KAAKO,uBAAL,CAA6BtI,MAA7B,CAFY,EAGZ,KAAKwI,sBAAL,CAA4BJ,KAA5B,CAHY,CAAd;IAKD;;IACD,OAAOvB,WAAP;EACD;;EACD0B,qBAAqB,CAACR,IAAD,EAAO;IAC1B,IAAIpK,EAAJ;;IACA,IAAIoK,IAAI,CAACtI,MAAL,KAAgB,CAApB,EAAuB;MACrB,OAAO,EAAP;IACD;;IACD,MAAM;MAAEtG,WAAF;MAAewC;IAAf,IAAgC,IAAtC;IACA,OAAQ3J,CAAC,CAAC,4BAAD,EAA+B;MAAEwU,KAAK,EAAE,YAAT;MAAuB1K,KAAK,EAAE,KAAKA,KAAnC;MAA0CuL,KAAK,EAAEU,IAAjD;MAAuD7F,KAAK,EAAE,CAACvE,EAAE,GAAIhC,YAAY,CAAC7C,GAAb,IAAoB,KAAKM,UAAL,CAAgBN,GAA3C,MAAqD,IAArD,IAA6D6E,EAAE,KAAK,KAAK,CAAzE,GAA6EA,EAA7E,GAAkF5E,SAAhJ;MAA2J2O,WAAW,EAAGxJ,EAAD,IAAQ;QACpN;QACA;QACA;QACA;QACA,IAAI,KAAK4D,uBAAT,EAAkC;UAChC,KAAKA,uBAAL;QACD;;QACD,KAAK5E,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwB,YAAlB,CAAd,EAA+C;UAAE7C,GAAG,EAAEoF,EAAE,CAACyJ,MAAH,CAAUzF;QAAjB,CAA/C,CAArB;;QACA,IAAI,CAAC5I,KAAK,CAACC,OAAN,CAAcJ,WAAd,CAAL,EAAiC;UAC/B,KAAKgE,cAAL,CAAoBjD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,WAAlB,CAAd,EAA8C;YAAEL,GAAG,EAAEoF,EAAE,CAACyJ,MAAH,CAAUzF;UAAjB,CAA9C,CAApB;QACD,CAXmN,CAYpN;QACA;;;QACA,KAAKnC,0BAAL;QACA7B,EAAE,CAAC+H,eAAH;MACD;IAhBqC,CAA/B,CAAT;EAiBD;;EACDqC,uBAAuB,CAACtI,MAAD,EAAS;IAC9B,IAAIA,MAAM,CAACP,MAAP,KAAkB,CAAtB,EAAyB;MACvB,OAAO,EAAP;IACD;;IACD,MAAM;MAAEtG,WAAF;MAAewC;IAAf,IAAgC,IAAtC;IACA,OAAQ3J,CAAC,CAAC,4BAAD,EAA+B;MAAEwU,KAAK,EAAE,cAAT;MAAyB1K,KAAK,EAAE,KAAKA,KAArC;MAA4CuL,KAAK,EAAErH,MAAnD;MAA2DkC,KAAK,EAAEvG,YAAY,CAACJ,KAA/E;MAAsFmM,WAAW,EAAGxJ,EAAD,IAAQ;QAC/I;QACA;QACA;QACA;QACA,IAAI,KAAK4D,uBAAT,EAAkC;UAChC,KAAKA,uBAAL;QACD;;QACD,KAAK5E,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwB,YAAlB,CAAd,EAA+C;UAAEJ,KAAK,EAAE2C,EAAE,CAACyJ,MAAH,CAAUzF;QAAnB,CAA/C,CAArB;;QACA,IAAI,CAAC5I,KAAK,CAACC,OAAN,CAAcJ,WAAd,CAAL,EAAiC;UAC/B,KAAKgE,cAAL,CAAoBjD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,WAAlB,CAAd,EAA8C;YAAEoC,KAAK,EAAE2C,EAAE,CAACyJ,MAAH,CAAUzF;UAAnB,CAA9C,CAApB;QACD,CAX8I,CAY/I;QACA;;;QACA,KAAKnC,0BAAL;QACA7B,EAAE,CAAC+H,eAAH;MACD;IAhBqC,CAA/B,CAAT;EAiBD;;EACDuC,sBAAsB,CAACJ,KAAD,EAAQ;IAC5B,IAAIA,KAAK,CAAC3I,MAAN,KAAiB,CAArB,EAAwB;MACtB,OAAO,EAAP;IACD;;IACD,MAAM;MAAEtG,WAAF;MAAewC;IAAf,IAAgC,IAAtC;IACA,OAAQ3J,CAAC,CAAC,4BAAD,EAA+B;MAAEwU,KAAK,EAAE,aAAT;MAAwB1K,KAAK,EAAE,KAAKA,KAApC;MAA2CuL,KAAK,EAAEe,KAAlD;MAAyDlG,KAAK,EAAEvG,YAAY,CAACjD,IAA7E;MAAmFgP,WAAW,EAAGxJ,EAAD,IAAQ;QAC5I;QACA;QACA;QACA;QACA,IAAI,KAAK4D,uBAAT,EAAkC;UAChC,KAAKA,uBAAL;QACD;;QACD,KAAK5E,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwB,YAAlB,CAAd,EAA+C;UAAEjD,IAAI,EAAEwF,EAAE,CAACyJ,MAAH,CAAUzF;QAAlB,CAA/C,CAArB;;QACA,IAAI,CAAC5I,KAAK,CAACC,OAAN,CAAcJ,WAAd,CAAL,EAAiC;UAC/B,KAAKgE,cAAL,CAAoBjD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,WAAlB,CAAd,EAA8C;YAAET,IAAI,EAAEwF,EAAE,CAACyJ,MAAH,CAAUzF;UAAlB,CAA9C,CAApB;QACD,CAX2I,CAY5I;QACA;;;QACA,KAAKnC,0BAAL;QACA7B,EAAE,CAAC+H,eAAH;MACD;IAhBqC,CAA/B,CAAT;EAiBD;;EACDa,uBAAuB,CAACF,iBAAD,EAAoB;IACzC,IAAI,CAAC,MAAD,EAAS,OAAT,EAAkB,YAAlB,EAAgC,MAAhC,EAAwC5N,QAAxC,CAAiD4N,iBAAjD,CAAJ,EAAyE;MACvE,OAAO,EAAP;IACD;;IACD,MAAM;MAAE6B,SAAF;MAAaC,WAAb;MAA0BC;IAA1B,IAA4C7S,kBAAkB,CAAC,KAAKoD,MAAN,EAAc,KAAKyC,YAAnB,EAAiC,KAAKiN,SAAtC,EAAiD,KAAK1G,KAAL,GAAa,KAAK1J,QAAlB,GAA6BO,SAA9E,EAAyF,KAAKmJ,KAAL,GAAa,KAAKzJ,QAAlB,GAA6BM,SAAtH,EAAiI,KAAK8K,gBAAtI,EAAwJ,KAAKG,kBAA7J,CAApE;IACA,OAAO,CACL,KAAK6E,sBAAL,CAA4BJ,SAA5B,CADK,EAEL,KAAKK,wBAAL,CAA8BJ,WAA9B,CAFK,EAGL,KAAKK,2BAAL,CAAiCJ,aAAjC,CAHK,CAAP;EAKD;;EACDE,sBAAsB,CAACJ,SAAD,EAAY;IAChC,MAAM;MAAE9M,YAAF;MAAgB0B;IAAhB,IAAqC,IAA3C;IACA,IAAIoL,SAAS,CAAChJ,MAAV,KAAqB,CAAzB,EACE,OAAO,EAAP;IACF,OAAQzN,CAAC,CAAC,4BAAD,EAA+B;MAAE8J,KAAK,EAAE,KAAKA,KAAd;MAAqBoG,KAAK,EAAE7E,gBAAgB,CAAC7B,IAA7C;MAAmD6L,KAAK,EAAEoB,SAA1D;MAAqEO,YAAY,EAAE,IAAnF;MAAyFtB,WAAW,EAAGxJ,EAAD,IAAQ;QAClJ,KAAKhB,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwB,YAAlB,CAAd,EAA+C;UAAEH,IAAI,EAAE0C,EAAE,CAACyJ,MAAH,CAAUzF;QAAlB,CAA/C,CAArB;;QACA,IAAI,CAAC5I,KAAK,CAACC,OAAN,CAAc8D,gBAAd,CAAL,EAAsC;UACpC,KAAKF,cAAL,CAAoBjD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkD,gBAAlB,CAAd,EAAmD;YAAE7B,IAAI,EAAE0C,EAAE,CAACyJ,MAAH,CAAUzF;UAAlB,CAAnD,CAApB;QACD;;QACDhE,EAAE,CAAC+H,eAAH;MACD;IANqC,CAA/B,CAAT;EAOD;;EACD6C,wBAAwB,CAACJ,WAAD,EAAc;IACpC,MAAM;MAAE/M,YAAF;MAAgB0B;IAAhB,IAAqC,IAA3C;IACA,IAAIqL,WAAW,CAACjJ,MAAZ,KAAuB,CAA3B,EACE,OAAO,EAAP;IACF,OAAQzN,CAAC,CAAC,4BAAD,EAA+B;MAAE8J,KAAK,EAAE,KAAKA,KAAd;MAAqBoG,KAAK,EAAE7E,gBAAgB,CAAC5B,MAA7C;MAAqD4L,KAAK,EAAEqB,WAA5D;MAAyEM,YAAY,EAAE,IAAvF;MAA6FtB,WAAW,EAAGxJ,EAAD,IAAQ;QACtJ,KAAKhB,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwB,YAAlB,CAAd,EAA+C;UAAEF,MAAM,EAAEyC,EAAE,CAACyJ,MAAH,CAAUzF;QAApB,CAA/C,CAArB;;QACA,IAAI,CAAC5I,KAAK,CAACC,OAAN,CAAc8D,gBAAd,CAAL,EAAsC;UACpC,KAAKF,cAAL,CAAoBjD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkD,gBAAlB,CAAd,EAAmD;YAAE5B,MAAM,EAAEyC,EAAE,CAACyJ,MAAH,CAAUzF;UAApB,CAAnD,CAApB;QACD;;QACDhE,EAAE,CAAC+H,eAAH;MACD;IANqC,CAA/B,CAAT;EAOD;;EACD8C,2BAA2B,CAACJ,aAAD,EAAgB;IACzC,MAAM;MAAEhN,YAAF;MAAgB0B;IAAhB,IAAqC,IAA3C;;IACA,IAAIsL,aAAa,CAAClJ,MAAd,KAAyB,CAA7B,EAAgC;MAC9B,OAAO,EAAP;IACD;;IACD,MAAMwJ,cAAc,GAAGjT,oBAAoB,CAAC,KAAKkD,MAAN,CAA3C;IACA,OAAQlH,CAAC,CAAC,4BAAD,EAA+B;MAAEqP,KAAK,EAAE4H,cAAc,GAAG;QAAEC,KAAK,EAAE;MAAT,CAAH,GAAqB,EAA5C;MAAgDpN,KAAK,EAAE,KAAKA,KAA5D;MAAmEoG,KAAK,EAAE7E,gBAAgB,CAAC3B,IAA3F;MAAiG2L,KAAK,EAAEsB,aAAxG;MAAuHjB,WAAW,EAAGxJ,EAAD,IAAQ;QAChL,MAAM1C,IAAI,GAAG9D,qBAAqB,CAACiE,YAAD,EAAeuC,EAAE,CAACyJ,MAAH,CAAUzF,KAAzB,CAAlC;QACA,KAAKhF,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBwB,YAAlB,CAAd,EAA+C;UAAED,IAAI,EAAEwC,EAAE,CAACyJ,MAAH,CAAUzF,KAAlB;UAAyB1G;QAAzB,CAA/C,CAArB;;QACA,IAAI,CAAClC,KAAK,CAACC,OAAN,CAAc8D,gBAAd,CAAL,EAAsC;UACpC,KAAKF,cAAL,CAAoBjD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBkD,gBAAlB,CAAd,EAAmD;YAAE3B,IAAI,EAAEwC,EAAE,CAACyJ,MAAH,CAAUzF,KAAlB;YAAyB1G;UAAzB,CAAnD,CAApB;QACD;;QACD0C,EAAE,CAAC+H,eAAH;MACD;IAPqC,CAA/B,CAAT;EAQD;;EACDkD,eAAe,CAACvC,iBAAD,EAAoB;IACjC,MAAM;MAAE1N;IAAF,IAAa,IAAnB;IACA,MAAMmP,cAAc,GAAGzS,kBAAkB,CAACsD,MAAD,CAAzC;IACA,MAAMkQ,WAAW,GAAGf,cAAc,GAAG,aAAH,GAAmB,YAArD;IACA,OAAQrW,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;QACtB,CAAE,eAAc4C,WAAY,EAA5B,GAAgC;MADV;IAAT,CAAR,EAEF,KAAKzC,iBAAL,CAAuBC,iBAAvB,CAFE,CAAT;EAGD;EACD;AACF;AACA;;;EACEyC,oBAAoB,CAACjJ,IAAD,EAAO;IACzB,MAAMkJ,YAAY,GAAGlJ,IAAI,KAAK,KAAT,GAAiB7N,WAAjB,GAA+BE,YAApD;IACA,MAAM8W,aAAa,GAAGnJ,IAAI,KAAK,KAAT,GAAiB/N,cAAjB,GAAkCK,cAAxD;IACA,MAAM8W,iBAAiB,GAAGxP,mBAAmB,CAAC,KAAK2B,YAAN,EAAoB,KAAKnD,QAAzB,EAAmC,KAAKC,QAAxC,CAA7C;IACA,MAAMgR,iBAAiB,GAAGrP,mBAAmB,CAAC,KAAKuB,YAAN,EAAoB,KAAKlD,QAAzB,CAA7C;IACA,OAAQzG,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAAsCxU,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAA8CxU,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAA0CxU,CAAC,CAAC,UAAD,EAAa;MAAE0X,MAAM,EAAE,IAAV;MAAgB/B,MAAM,EAAE,KAAxB;MAA+BgC,KAAK,EAAE,MAAtC;MAA8CjD,OAAO,EAAE,MAAM,KAAK3D,sBAAL;IAA7D,CAAb,EAA2G/Q,CAAC,CAAC,WAAD,EAAc,IAAd,EAAoBkE,eAAe,CAAC,KAAKgD,MAAN,EAAc,KAAKyC,YAAnB,CAAnC,EAAqE,GAArE,EAA0E3J,CAAC,CAAC,UAAD,EAAa;MAAE4X,IAAI,EAAE,KAAKtO,gBAAL,GAAwBgO,YAAxB,GAAuCC,aAA/C;MAA8DM,IAAI,EAAE;IAApE,CAAb,CAA3E,CAA5G,CAA3C,CAA/C,EAA+W7X,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAAyCxU,CAAC,CAAC,aAAD,EAAgB,IAAhB,EAAsBA,CAAC,CAAC,YAAD,EAAe;MAAE4H,QAAQ,EAAE4P,iBAAZ;MAA+B9C,OAAO,EAAE,MAAM,KAAKzM,SAAL;IAA9C,CAAf,EAAiFjI,CAAC,CAAC,UAAD,EAAa;MAAE8X,IAAI,EAAE,WAAR;MAAqBF,IAAI,EAAEzX,WAA3B;MAAwC0X,IAAI,EAAE,KAA9C;MAAqDE,OAAO,EAAE;IAA9D,CAAb,CAAlF,CAAvB,EAA8L/X,CAAC,CAAC,YAAD,EAAe;MAAE4H,QAAQ,EAAE6P,iBAAZ;MAA+B/C,OAAO,EAAE,MAAM,KAAKrM,SAAL;IAA9C,CAAf,EAAiFrI,CAAC,CAAC,UAAD,EAAa;MAAE8X,IAAI,EAAE,WAAR;MAAqBF,IAAI,EAAEvX,cAA3B;MAA2CwX,IAAI,EAAE,KAAjD;MAAwDE,OAAO,EAAE;IAAjE,CAAb,CAAlF,CAA/L,CAA1C,CAAhX,CAAvC,EAA6yB/X,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAA4CpQ,aAAa,CAAC,KAAK8C,MAAN,EAAckH,IAAd,EAAoB,KAAK/D,cAAL,GAAsB,CAA1C,CAAb,CAA0DoI,GAA1D,CAA+DzR,CAAD,IAAO;MACt6B,OAAOhB,CAAC,CAAC,KAAD,EAAQ;QAAEwU,KAAK,EAAE;MAAT,CAAR,EAAkCxT,CAAlC,CAAR;IACD,CAFk2B,CAA5C,CAA9yB,CAAT;EAGD;;EACDgX,WAAW,CAACzO,KAAD,EAAQ7C,IAAR,EAAc;IACvB,MAAM;MAAE0C;IAAF,IAA2B,IAAjC;IACA,MAAM6O,WAAW,GAAG,KAAK5G,gBAAL,KAA0BtK,SAA1B,IAAuC,KAAKsK,gBAAL,CAAsBrK,QAAtB,CAA+BN,IAA/B,CAA3D;IACA,MAAMwR,YAAY,GAAG,KAAK1G,iBAAL,KAA2BzK,SAA3B,IAAwC,KAAKyK,iBAAL,CAAuBxK,QAAvB,CAAgCuC,KAAhC,CAA7D;IACA,MAAM4O,kBAAkB,GAAG,CAACF,WAAD,IAAgB,CAACC,YAA5C;IACA,MAAME,aAAa,GAAGrQ,eAAe,CAAC;MACpCwB,KADoC;MAEpC7C,IAFoC;MAGpCI,GAAG,EAAE;IAH+B,CAAD,EAIlC;MACD;MACA;MACA;MACAN,QAAQ,EAAE0B,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK3B,QAAvB,CAAd,EAAgD;QAAEM,GAAG,EAAE;MAAP,CAAhD,CAJT;MAKDL,QAAQ,EAAEyB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK1B,QAAvB,CAAd,EAAgD;QAAEK,GAAG,EAAE;MAAP,CAAhD;IALT,CAJkC,CAArC,CALuB,CAgBvB;IACA;IACA;;IACA,MAAMuR,cAAc,GAAG,KAAK1O,YAAL,CAAkBJ,KAAlB,KAA4BA,KAA5B,IAAqC,KAAKI,YAAL,CAAkBjD,IAAlB,KAA2BA,IAAvF;IACA,OAAQ1G,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;QACtB,kBAAkB,IADI;QAEtB;QACA,2BAA2B,CAAC6D,cAAD,IAAmBD;MAHxB;IAAT,CAAR,EAIFpY,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAA0ClQ,cAAc,CAACiF,KAAD,EAAQ7C,IAAR,EAAc,KAAK2D,cAAL,GAAsB,CAApC,CAAd,CAAqDoI,GAArD,CAAyD,CAAC6F,UAAD,EAAa/C,KAAb,KAAuB;MAChI,MAAM;QAAEzO,GAAF;QAAOyR;MAAP,IAAqBD,UAA3B;MACA,MAAM;QAAEpD,aAAF;QAAiB5K;MAAjB,IAA8B,IAApC;MACA,MAAMkL,cAAc,GAAG;QAAEjM,KAAF;QAASzC,GAAT;QAAcJ;MAAd,CAAvB;MACA,MAAM;QAAEc,QAAF;QAAYG,OAAZ;QAAqBG,SAArB;QAAgCD,YAAhC;QAA8CD;MAA9C,IAA2DX,mBAAmB,CAAC,KAAKC,MAAN,EAAcsO,cAAd,EAA8B,KAAKnK,gBAAnC,EAAqD,KAAKjE,UAA1D,EAAsE,KAAKZ,QAA3E,EAAqF,KAAKC,QAA1F,EAAoG,KAAKkL,eAAzG,CAApF;MACA,IAAI6G,gBAAgB,GAAGL,kBAAkB,IAAIvQ,QAA7C;;MACA,IAAI,CAAC4Q,gBAAD,IAAqBtD,aAAa,KAAKnO,SAA3C,EAAsD;QACpD,IAAI;UACF;AACV;AACA;AACA;AACA;UACUyR,gBAAgB,GAAG,CAACtD,aAAa,CAAC/R,gBAAgB,CAACqS,cAAD,CAAjB,CAAjC;QACD,CAPD,CAQA,OAAOxT,CAAP,EAAU;UACRX,aAAa,CAAC,oGAAD,EAAuGW,CAAvG,CAAb;QACD;MACF;;MACD,OAAQhC,CAAC,CAAC,QAAD,EAAW;QAAEyY,QAAQ,EAAE,IAAZ;QAAkB,YAAY3R,GAA9B;QAAmC,cAAcyC,KAAjD;QAAwD,aAAa7C,IAArE;QAA2E,cAAc6O,KAAzF;QAAgG,oBAAoBgD,SAApH;QAA+H3Q,QAAQ,EAAE4Q,gBAAzI;QAA2JhE,KAAK,EAAE;UAClL,wBAAwB1N,GAAG,KAAK,IADkJ;UAElL,gBAAgB,IAFkK;UAGlL,uBAAuBU,QAAQ,IAAI4B,oBAH+I;UAIlL,sBAAsBzB;QAJ4J,CAAlK;QAKf,iBAAiBE,YALF;QAKgB,cAAcC,SAL9B;QAKyC4M,OAAO,EAAE,MAAM;UACxE,IAAI5N,GAAG,KAAK,IAAZ,EAAkB;YAChB;UACD;;UACD,KAAKoE,eAAL,CAAqBhD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKwB,YAAvB,CAAd,EAAoD;YAAEJ,KAAF;YACvEzC,GADuE;YAEvEJ;UAFuE,CAApD,CAArB,EAJwE,CAOxE;;UACA,IAAI4D,QAAJ,EAAc;YACZ,KAAKa,cAAL,CAAoB;cAClB5B,KADkB;cAElBzC,GAFkB;cAGlBJ;YAHkB,CAApB,EAIGc,QAAQ,IAAI4B,oBAJf;UAKD,CAND,MAOK;YACH,KAAK+B,cAAL,CAAoBjD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKhB,WAAvB,CAAd,EAAmD;cAAEoC,KAAF;cACrEzC,GADqE;cAErEJ;YAFqE,CAAnD,CAApB;UAGD;QACF;MAzBiB,CAAX,EAyBFI,GAzBE,CAAT;IA0BD,CA7CiD,CAA1C,CAJC,CAAT;EAkDD;;EACD4R,kBAAkB,GAAG;IACnB,OAAQ1Y,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE,6BAAT;MAAwCmE,GAAG,EAAG5N,EAAD,IAAS,KAAKa,eAAL,GAAuBb,EAA7E;MAAkF0N,QAAQ,EAAE;IAA5F,CAAR,EAA2GjU,cAAc,CAAC,KAAKmF,YAAN,CAAd,CAAkC8I,GAAlC,CAAsC,SAAqB;MAAA,IAApB;QAAElJ,KAAF;QAAS7C;MAAT,CAAoB;MAC7K,OAAO,KAAKsR,WAAL,CAAiBzO,KAAjB,EAAwB7C,IAAxB,CAAP;IACD,CAFmH,CAA3G,CAAT;EAGD;;EACDkS,cAAc,CAACxK,IAAD,EAAO;IACnB,OAAQpO,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAAwC,KAAK6C,oBAAL,CAA0BjJ,IAA1B,CAAxC,EAAyE,KAAKsK,kBAAL,EAAzE,CAAT;EACD;;EACDG,eAAe,GAAG;IAChB,MAAMC,mBAAmB,GAAG,KAAK/N,EAAL,CAAQS,aAAR,CAAsB,qBAAtB,MAAiD,IAA7E;;IACA,IAAI,CAACsN,mBAAD,IAAwB,CAAC,KAAKpO,oBAAlC,EAAwD;MACtD;IACD;;IACD,OAAO1K,CAAC,CAAC,MAAD,EAAS;MAAE+J,IAAI,EAAE;IAAR,CAAT,EAAiC,MAAjC,CAAR;EACD;;EACDgP,iBAAiB,GAAG;IAClB,MAAMC,SAAS,GAAGtU,QAAQ,CAAC,KAAKwC,MAAN,EAAc,KAAK0P,SAAnB,CAA1B;IACA,OAAO,CACL5W,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAAkC,KAAKqE,eAAL,EAAlC,CADI,EAEL7Y,CAAC,CAAC,QAAD,EAAW;MAAEwU,KAAK,EAAE;QACjB,aAAa,IADI;QAEjB,oBAAoB,KAAK3K;MAFR,CAAT;MAGP,iBAAiB,OAHV;MAGmB,iBAAiB,MAHpC;MAG4C6K,OAAO,EAAE,MAAOxI,EAAP,IAAc;QAC3E,MAAM;UAAE+M;QAAF,IAAiB,IAAvB;;QACA,IAAIA,UAAJ,EAAgB;UACd,KAAKpP,iBAAL,GAAyB,IAAzB;UACAoP,UAAU,CAACC,OAAX,CAAmB,IAAIC,WAAJ,CAAgB,iBAAhB,EAAmC;YACpDxD,MAAM,EAAE;cACNyD,eAAe,EAAElN,EAAE,CAACmN;YADd;UAD4C,CAAnC,CAAnB;UAKA,MAAMJ,UAAU,CAACK,aAAX,EAAN;UACA,KAAKzP,iBAAL,GAAyB,KAAzB;QACD;MACF;IAfS,CAAX,EAeMjF,gBAAgB,CAAC,KAAKsC,MAAN,EAAc,KAAKmE,gBAAnB,EAAqC2N,SAArC,CAftB,CAFI,EAkBLhZ,CAAC,CAAC,aAAD,EAAgB;MAAEuZ,SAAS,EAAE,QAAb;MAAuBC,WAAW,EAAE,IAApC;MAA0CC,YAAY,EAAE,CAAxD;MAA2DC,KAAK,EAAE,KAAlE;MAAyEC,aAAa,EAAGzN,EAAD,IAAQ;QAC7G;AACV;AACA;AACA;AACA;AACA;AACA;AACA;QACU,MAAM0N,IAAI,GAAG1N,EAAE,CAACmN,MAAH,CAAU9L,gBAAV,CAA2B,4BAA3B,CAAb,CAT6G,CAU7G;;QACAqM,IAAI,CAACC,OAAL,CAAcC,GAAD,IAASA,GAAG,CAACC,wBAAJ,EAAtB;MACD,CAZc;MAYZ1K,KAAK,EAAE;QACR,cAAc,OADN;QAER,eAAe;MAFP,CAZK;MAgBf;MACA;MACA2K,cAAc,EAAE,IAlBD;MAkBOrB,GAAG,EAAG5N,EAAD,IAAS,KAAKkO,UAAL,GAAkBlO;IAlBvC,CAAhB,EAkB8D,KAAK4J,iBAAL,CAAuB,MAAvB,CAlB9D,CAlBI,CAAP;EAsCD;;EACDsF,wBAAwB,CAAC7L,IAAD,EAAO;IAC7B,MAAM8L,eAAe,GAAG,KAAKnP,EAAL,CAAQS,aAAR,CAAsB,gBAAtB,MAA4C,IAApE;;IACA,IAAI,CAAC0O,eAAD,IAAoB,CAAC,KAAK3P,gBAA9B,EAAgD;MAC9C;IACD;;IACD,OAAQvK,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAAsCxU,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAAqCxU,CAAC,CAAC,MAAD,EAAS;MAAE+J,IAAI,EAAE;IAAR,CAAT,EAA4B,aAA5B,CAAtC,CAAvC,EAA0HqE,IAAI,KAAK,IAAT,IAAiB,CAAC,KAAK9D,QAAvB,IAAoCtK,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAA6C1P,cAAc,CAAC,KAAKoC,MAAN,EAAc,KAAKC,WAAnB,CAA3D,CAA/J,CAAT;EACD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEgT,UAAU,GAAG;IACX,MAAM;MAAElQ;IAAF,IAAmB,IAAzB;IACA,MAAMmQ,oBAAoB,GAAGnQ,YAAY,KAAK,MAA9C;IACA,OAAQjK,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAAoC4F,oBAAoB,GAAG,KAAKzF,iBAAL,EAAH,GAA8B,KAAKoE,iBAAL,EAAtF,CAAT;EACD;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEsB,iCAAiC,GAAG;IAClC,OAAOra,CAAC,CAAC,KAAD,EAAQ;MAAEwU,KAAK,EAAE;IAAT,CAAR,EAAoC,KAAK2C,eAAL,CAAqB,YAArB,CAApC,CAAR;EACD;EACD;AACF;AACA;AACA;;;EACEmD,cAAc,CAAClM,IAAD,EAAO;IACnB,MAAM;MAAEnE,YAAF;MAAgBW;IAAhB,IAAgC,IAAtC;IACA;AACJ;AACA;AACA;;IACI,MAAM2P,eAAe,GAAGtQ,YAAY,KAAK,MAAjB,IAA2BA,YAAY,KAAK,WAA5C,IAA2DA,YAAY,KAAK,WAApG;;IACA,IAAIW,WAAW,IAAI2P,eAAnB,EAAoC;MAClC,OAAO,CAAC,KAAKpD,eAAL,EAAD,EAAyB,KAAK7C,YAAL,EAAzB,CAAP;IACD;;IACD,QAAQrK,YAAR;MACE,KAAK,WAAL;QACE,OAAO,CACL,KAAKgQ,wBAAL,CAA8B7L,IAA9B,CADK,EAEL,KAAKwK,cAAL,CAAoBxK,IAApB,CAFK,EAGL,KAAKiM,iCAAL,EAHK,EAIL,KAAKF,UAAL,EAJK,EAKL,KAAK7F,YAAL,EALK,CAAP;;MAOF,KAAK,WAAL;QACE,OAAO,CACL,KAAK2F,wBAAL,CAA8B7L,IAA9B,CADK,EAEL,KAAK+L,UAAL,EAFK,EAGL,KAAKvB,cAAL,CAAoBxK,IAApB,CAHK,EAIL,KAAKiM,iCAAL,EAJK,EAKL,KAAK/F,YAAL,EALK,CAAP;;MAOF,KAAK,MAAL;QACE,OAAO,CAAC,KAAK6F,UAAL,EAAD,EAAoB,KAAK7F,YAAL,EAApB,CAAP;;MACF,KAAK,OAAL;MACA,KAAK,YAAL;MACA,KAAK,MAAL;QACE,OAAO,CAAC,KAAK6C,eAAL,EAAD,EAAyB,KAAK7C,YAAL,EAAzB,CAAP;;MACF;QACE,OAAO,CACL,KAAK2F,wBAAL,CAA8B7L,IAA9B,CADK,EAEL,KAAKwK,cAAL,CAAoBxK,IAApB,CAFK,EAGL,KAAKiM,iCAAL,EAHK,EAIL,KAAK/F,YAAL,EAJK,CAAP;IAxBJ;EA+BD;;EACDkG,MAAM,GAAG;IACP,MAAM;MAAEzQ,IAAF;MAAQmG,KAAR;MAAetI,QAAf;MAAyBmD,EAAzB;MAA6BjB,KAA7B;MAAoCF,WAApC;MAAiDI,QAAjD;MAA2DV,gBAA3D;MAA6EsB,WAA7E;MAA0FX,YAA1F;MAAwGU;IAAxG,IAAkH,IAAxH;IACA,MAAMyD,IAAI,GAAGxN,UAAU,CAAC,IAAD,CAAvB;IACA,MAAM6Z,0BAA0B,GAAGxQ,YAAY,KAAK,MAAjB,IAA2BA,YAAY,KAAK,OAA5C,IAAuDA,YAAY,KAAK,YAA3G;IACA,MAAMyQ,sBAAsB,GAAGpR,gBAAgB,IAAImR,0BAAnD;IACA,MAAME,mBAAmB,GAAGrR,gBAAgB,IAAI,CAACmR,0BAAjD;IACA,MAAMG,mBAAmB,GAAG3Q,YAAY,KAAK,MAAjB,IAA2BA,YAAY,KAAK,WAA5C,IAA2DA,YAAY,KAAK,WAAxG;IACA,MAAMsQ,eAAe,GAAGK,mBAAmB,IAAIhQ,WAA/C;IACA,MAAMiQ,OAAO,GAAGD,mBAAmB,IAAI,CAAChQ,WAAxC;IACA3J,iBAAiB,CAAC,IAAD,EAAO8J,EAAP,EAAWhB,IAAX,EAAiB/E,WAAW,CAACkL,KAAD,CAA5B,EAAqCtI,QAArC,CAAjB;IACA,OAAQ5H,CAAC,CAACC,IAAD,EAAO;MAAE,iBAAiB2H,QAAQ,GAAG,MAAH,GAAY,IAAvC;MAA6C0I,OAAO,EAAE,KAAKA,OAA3D;MAAoEE,MAAM,EAAE,KAAKA,MAAjF;MAAyFgE,KAAK,EAAEtM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB3G,kBAAkB,CAACsI,KAAD,EAAQ;QACxJ,CAACsE,IAAD,GAAQ,IADgJ;QAExJ,CAAC,oBAAD,GAAwBxE,WAFgI;QAGxJ,CAAC,mBAAD,GAAuBI,QAHiI;QAIxJ,CAAC,mBAAD,GAAuBpC,QAJiI;QAKxJ,uBAAuB8S,sBALiI;QAMxJ,0BAA0BC,mBAN8H;QAOxJ,CAAE,yBAAwB1Q,YAAa,EAAvC,GAA2C,IAP6G;QAQxJ,CAAE,iBAAgBU,IAAK,EAAvB,GAA2B,IAR6H;QASxJ,CAAE,uBAAF,GAA2B4P,eAT6H;QAUxJ,CAAE,eAAF,GAAmBM;MAVqI,CAAR,CAApC;IAAhG,CAAP,EAWA,KAAKP,cAAL,CAAoBlM,IAApB,CAXA,CAAT;EAYD;;EACK,IAAFrD,EAAE,GAAG;IAAE,OAAO,IAAP;EAAc;;EACN,WAAR+P,QAAQ,GAAG;IAAE,OAAO;MAC7B,YAAY,CAAC,iBAAD,CADiB;MAE7B,OAAO,CAAC,YAAD,CAFsB;MAG7B,OAAO,CAAC,YAAD,CAHsB;MAI7B,cAAc,CAAC,mBAAD,CAJe;MAK7B,eAAe,CAAC,oBAAD,CALc;MAM7B,aAAa,CAAC,kBAAD,CANgB;MAO7B,cAAc,CAAC,mBAAD,CAPe;MAQ7B,gBAAgB,CAAC,qBAAD,CARa;MAS7B,eAAe,CAAC,oBAAD,CATc;MAU7B,SAAS,CAAC,cAAD;IAVoB,CAAP;EAWpB;;EACY,WAALzL,KAAK,GAAG;IAAE,OAAO;MAC1B0L,GAAG,EAAEzS,cADqB;MAE1B0S,EAAE,EAAEzS;IAFsB,CAAP;EAGjB;;AA/7CsE,CAA3B,EAg8C9C,CAAC,EAAD,EAAK,cAAL,EAAqB;EACpB,SAAS,CAAC,CAAD,CADW;EAEpB,QAAQ,CAAC,CAAD,CAFY;EAGpB,YAAY,CAAC,CAAD,CAHQ;EAIpB,YAAY,CAAC,CAAD,CAJQ;EAKpB,iBAAiB,CAAC,EAAD,CALG;EAMpB,OAAO,CAAC,IAAD,CANa;EAOpB,OAAO,CAAC,IAAD,CAPa;EAQpB,gBAAgB,CAAC,CAAD,CARI;EASpB,cAAc,CAAC,CAAD,EAAI,aAAJ,CATM;EAUpB,YAAY,CAAC,CAAD,EAAI,WAAJ,CAVQ;EAWpB,aAAa,CAAC,CAAD,EAAI,YAAJ,CAXO;EAYpB,cAAc,CAAC,CAAD,EAAI,aAAJ,CAZM;EAapB,eAAe,CAAC,CAAD,EAAI,cAAJ,CAbK;EAcpB,aAAa,CAAC,CAAD,EAAI,YAAJ,CAdO;EAepB,cAAc,CAAC,CAAD,EAAI,aAAJ,CAfM;EAgBpB,gBAAgB,CAAC,CAAD,EAAI,eAAJ,CAhBI;EAiBpB,UAAU,CAAC,CAAD,CAjBU;EAkBpB,kBAAkB,CAAC,CAAD,EAAI,mBAAJ,CAlBE;EAmBpB,YAAY,CAAC,CAAD,CAnBQ;EAoBpB,SAAS,CAAC,IAAD,CApBW;EAqBpB,oBAAoB,CAAC,CAAD,EAAI,oBAAJ,CArBA;EAsBpB,sBAAsB,CAAC,CAAD,EAAI,sBAAJ,CAtBF;EAuBpB,mBAAmB,CAAC,CAAD,EAAI,mBAAJ,CAvBC;EAwBpB,wBAAwB,CAAC,CAAD,EAAI,yBAAJ,CAxBJ;EAyBpB,aAAa,CAAC,CAAD,EAAI,YAAJ,CAzBO;EA0BpB,QAAQ,CAAC,CAAD,CA1BY;EA2BpB,eAAe,CAAC,CAAD,EAAI,cAAJ,CA3BK;EA4BpB,oBAAoB,CAAC,EAAD,CA5BA;EA6BpB,eAAe,CAAC,EAAD,CA7BK;EA8BpB,gBAAgB,CAAC,EAAD,CA9BI;EA+BpB,eAAe,CAAC,EAAD,CA/BK;EAgCpB,qBAAqB,CAAC,EAAD,CAhCD;EAiCpB,WAAW,CAAC,EAAD,CAjCS;EAkCpB,SAAS,CAAC,EAAD,CAlCW;EAmCpB,UAAU,CAAC,EAAD;AAnCU,CAArB,CAh8C8C,CAAjD;AAq+CA,IAAIY,WAAW,GAAG,CAAlB;;AACA,SAAS8R,qBAAT,GAAiC;EAC/B,IAAI,OAAOC,cAAP,KAA0B,WAA9B,EAA2C;IACzC;EACD;;EACD,MAAMC,UAAU,GAAG,CAAC,cAAD,EAAiB,cAAjB,EAAiC,YAAjC,EAA+C,aAA/C,EAA8D,UAA9D,EAA0E,UAA1E,EAAsF,WAAtF,EAAmG,UAAnG,EAA+G,4BAA/G,EAA6I,qBAA7I,EAAoK,aAApK,EAAmL,mBAAnL,CAAnB;EACAA,UAAU,CAACtB,OAAX,CAAmBuB,OAAO,IAAI;IAAE,QAAQA,OAAR;MAC9B,KAAK,cAAL;QACE,IAAI,CAACF,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChCF,cAAc,CAACI,MAAf,CAAsBF,OAAtB,EAA+B5S,QAA/B;QACD;;QACD;;MACF,KAAK,cAAL;QACE,IAAI,CAAC0S,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChCzV,qBAAqB;QACtB;;QACD;;MACF,KAAK,YAAL;QACE,IAAI,CAACuV,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChCxV,qBAAqB;QACtB;;QACD;;MACF,KAAK,aAAL;QACE,IAAI,CAACsV,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChCvV,qBAAqB;QACtB;;QACD;;MACF,KAAK,UAAL;QACE,IAAI,CAACqV,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChCtV,qBAAqB;QACtB;;QACD;;MACF,KAAK,UAAL;QACE,IAAI,CAACoV,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChCrV,qBAAqB;QACtB;;QACD;;MACF,KAAK,WAAL;QACE,IAAI,CAACmV,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChCpV,qBAAqB;QACtB;;QACD;;MACF,KAAK,UAAL;QACE,IAAI,CAACkV,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChCnV,qBAAqB;QACtB;;QACD;;MACF,KAAK,4BAAL;QACE,IAAI,CAACiV,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChClV,qBAAqB;QACtB;;QACD;;MACF,KAAK,qBAAL;QACE,IAAI,CAACgV,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChCjV,qBAAqB;QACtB;;QACD;;MACF,KAAK,aAAL;QACE,IAAI,CAAC+U,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChChV,qBAAqB;QACtB;;QACD;;MACF,KAAK,mBAAL;QACE,IAAI,CAAC8U,cAAc,CAACG,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChC/U,qBAAqB;QACtB;;QACD;IA5D4B;EA6D7B,CA7DH;AA8DD;;AAED,MAAMkV,WAAW,GAAG/S,QAApB;AACA,MAAMgT,mBAAmB,GAAGP,qBAA5B;AAEA,SAASM,WAAT,EAAsBC,mBAAtB"},"metadata":{},"sourceType":"module"}